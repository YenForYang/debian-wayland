<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wayland-server_8c" kind="file" language="C++">
    <compoundname>wayland-server.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/un.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="wayland-util_8h" local="yes">wayland-util.h</includes>
    <includes local="yes">wayland-private.h</includes>
    <includes refid="wayland-server_8h" local="yes">wayland-server.h</includes>
    <includes local="yes">wayland-os.h</includes>
    <incdepgraph>
      <node id="56">
        <label>sys/stat.h</label>
      </node>
      <node id="45">
        <label>stdbool.h</label>
      </node>
      <node id="44">
        <label>stdarg.h</label>
      </node>
      <node id="50">
        <label>sys/un.h</label>
      </node>
      <node id="39">
        <label>/dev/shm/libwayland/wayland/src/wayland-server.c</label>
        <link refid="wayland-server_8c"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>wayland-server.h</label>
        <link refid="wayland-server_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>assert.h</label>
      </node>
      <node id="41">
        <label>stdint.h</label>
      </node>
      <node id="40">
        <label>stdlib.h</label>
      </node>
      <node id="46">
        <label>errno.h</label>
      </node>
      <node id="54">
        <label>fcntl.h</label>
      </node>
      <node id="42">
        <label>stddef.h</label>
      </node>
      <node id="66">
        <label>wayland-os.h</label>
      </node>
      <node id="62">
        <label>wayland-server-core.h</label>
        <link refid="wayland-server-core_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>sys/types.h</label>
      </node>
      <node id="47">
        <label>string.h</label>
      </node>
      <node id="65">
        <label>wayland-server-protocol.h</label>
      </node>
      <node id="48">
        <label>unistd.h</label>
      </node>
      <node id="64">
        <label>wayland-version.h</label>
      </node>
      <node id="60">
        <label>wayland-private.h</label>
      </node>
      <node id="55">
        <label>sys/file.h</label>
      </node>
      <node id="58">
        <label>math.h</label>
      </node>
      <node id="53">
        <label>sys/time.h</label>
      </node>
      <node id="49">
        <label>sys/socket.h</label>
      </node>
      <node id="57">
        <label>wayland-util.h</label>
        <link refid="wayland-util_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>stdio.h</label>
      </node>
      <node id="59">
        <label>inttypes.h</label>
      </node>
      <node id="51">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwl__socket" prot="public">wl_socket</innerclass>
    <innerclass refid="structwl__client" prot="public">wl_client</innerclass>
    <innerclass refid="structwl__display" prot="public">wl_display</innerclass>
    <innerclass refid="structwl__global" prot="public">wl_global</innerclass>
    <innerclass refid="structwl__resource" prot="public">wl_resource</innerclass>
    <innerclass refid="structwl__protocol__logger" prot="public">wl_protocol_logger</innerclass>
    <innerclass refid="structwl__resource__iterator__context" prot="public">wl_resource_iterator_context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wayland-server_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="26" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wayland-server_8c_1a7baab2aa5bf8eb14b6128e0f16634837" prot="public" static="no">
        <name>UNIX_PATH_MAX</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="56" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wayland-server_8c_1a11aa03fdbf1a2680335dcaa0c73f25e3" prot="public" static="no">
        <name>LOCK_SUFFIX</name>
        <initializer>&quot;.lock&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="59" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wayland-server_8c_1a55f0760f271ff025b986de41b1e9f11e" prot="public" static="no">
        <name>LOCK_SUFFIXLEN</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="60" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wayland-server_8c_1a52867feb1b6939f5b17d7cac9b40927f" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int debug_server</definition>
        <argsstring></argsstring>
        <name>debug_server</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="139" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-server_8c_1aa4c206ce0f7af5d09e5fe6506cfeabd7" prot="public" static="yes" mutable="no">
        <type>const struct wl_registry_interface</type>
        <definition>const struct wl_registry_interface registry_interface</definition>
        <argsstring></argsstring>
        <name>registry_interface</name>
        <initializer>= {
	<ref refid="wayland-server_8c_1a544722ec6870ffc3b1710e372a6a2ca0" kindref="member">registry_bind</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="872" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-server_8c_1a41aff09d441b40a4e816bc23333701f7" prot="public" static="yes" mutable="no">
        <type>const struct wl_display_interface</type>
        <definition>const struct wl_display_interface display_interface</definition>
        <argsstring></argsstring>
        <name>display_interface</name>
        <initializer>= {
	<ref refid="wayland-server_8c_1ab959fd43e51921133cd16adb7c78f93b" kindref="member">display_sync</ref>,
	<ref refid="wayland-server_8c_1a5a6e0098b0e0f468a7a392873e268caa" kindref="member">display_get_registry</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="934" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="964" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wayland-server_8c_1a1cd4d754208ed7c774beb192cdb33e15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void log_closure</definition>
        <argsstring>(struct wl_resource *resource, struct wl_closure *closure, int send)</argsstring>
        <name>log_closure</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct wl_closure *</type>
          <declname>closure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>send</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="142" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="142" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a5e6257b74e73e94c150cec6bd966c519" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool verify_objects</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args)</argsstring>
        <name>verify_objects</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="170" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="170" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a824138de8eaf7463ca1585d66710c154" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_array</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args, int(*send_func)(struct wl_closure *, struct wl_connection *))</argsstring>
        <name>handle_array</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>int(*)(struct wl_closure *, struct wl_connection *)</type>
          <declname>send_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="200" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="200" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a97deed922e68853cb3785947926d56a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_event_array</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args)</argsstring>
        <name>wl_resource_post_event_array</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="232" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_event</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode,...)</argsstring>
        <name>wl_resource_post_event</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="239" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="239" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9b63bd8423712f6edebfd6dae9e48225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_queue_event_array</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args)</argsstring>
        <name>wl_resource_queue_event_array</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="255" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a67891685eff3a9ebd5371d78ca83d516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_queue_event</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode,...)</argsstring>
        <name>wl_resource_queue_event</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="262" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="262" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_error</definition>
        <argsstring>(struct wl_resource *resource, uint32_t code, const char *msg,...)</argsstring>
        <name>wl_resource_post_error</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="277" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="277" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_client_with_error</definition>
        <argsstring>(struct wl_client *client, const char *reason)</argsstring>
        <name>destroy_client_with_error</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="304" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9cc6d33e7551f411254c8e66cd074c9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_client_connection_data</definition>
        <argsstring>(int fd, uint32_t mask, void *data)</argsstring>
        <name>wl_client_connection_data</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="311" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="311" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9ca6bf2b19fc16d56ec13d584adc32d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bind_display</definition>
        <argsstring>(struct wl_client *client, struct wl_display *display)</argsstring>
        <name>bind_display</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="474" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="976" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_post_no_memory</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_post_no_memory</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="638" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="638" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1aefff369c8182adc3c29ea561e23b9fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_no_memory</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_post_no_memory</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="645" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="645" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a8783de35d9cb8c7ce05efc716ce1a31a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool resource_is_deprecated</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>resource_is_deprecated</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Detect if a <ref refid="structwl__resource" kindref="compound">wl_resource</ref> uses the deprecated public definition. </para>        </briefdescription>
        <detaileddescription>
<para>Before Wayland 1.2.0, the definition of struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> was public. It was made opaque just before 1.2.0, and later new fields were added. The new fields cannot be accessed if a program is using the deprecated defition, as there would not be memory allocated for them.</para><para>The creation pattern for the deprecated definition was wl_resource_init() followed by <ref refid="wayland-server_8h_1a86592c8dfc359094d1cfd8e6abb47cb7" kindref="member">wl_client_add_resource()</ref>. wl_resource_init() was an inline function and no longer exists, but binaries might still carry it. <ref refid="wayland-server_8h_1a86592c8dfc359094d1cfd8e6abb47cb7" kindref="member">wl_client_add_resource()</ref> still exists for ABI compatiblity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="664" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="664" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a942be7eb6c103bab38bac6f3b608e013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref></type>
        <definition>static enum wl_iterator_result destroy_resource</definition>
        <argsstring>(void *element, void *data, uint32_t flags)</argsstring>
        <name>destroy_resource</name>
        <param>
          <type>void *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="664" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="677" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a4fd83132742252516c9a3df7f4eaa4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_destroy</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_destroy</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="697" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="697" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ae265d2902bc8e0994b26a3f43e63448c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_resource_get_id</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_id</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="719" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="719" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ab1de3c23a75ddb99ff8c29c0e759a39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
        <definition>struct wl_list* wl_resource_get_link</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_link</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="725" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9851271c75c89ed572987126278834d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_resource_from_link</definition>
        <argsstring>(struct wl_list *link)</argsstring>
        <name>wl_resource_from_link</name>
        <param>
          <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="731" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="731" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a4ac3fbd1d228f441c6846f3ebccc9c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_resource_find_for_client</definition>
        <argsstring>(struct wl_list *list, struct wl_client *client)</argsstring>
        <name>wl_resource_find_for_client</name>
        <param>
          <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="739" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="739" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a300147832089811f11d345fbc3f47fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
        <definition>struct wl_client* wl_resource_get_client</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_client</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="755" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="755" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1aa9b40199dbf513b6a25263872b8490c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_user_data</definition>
        <argsstring>(struct wl_resource *resource, void *data)</argsstring>
        <name>wl_resource_set_user_data</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="761" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="761" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wl_resource_get_user_data</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_user_data</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="767" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="767" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a8f0f7d0b0f0fb9f44ccd3694b3dd58d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_resource_get_version</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_version</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="773" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="773" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ab69024ab2f0f502aa70cf18bb2761882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_destructor</definition>
        <argsstring>(struct wl_resource *resource, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_destructor</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="779" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="779" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a8849a58c3ba7a528c643591369125844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_resource_instance_of</definition>
        <argsstring>(struct wl_resource *resource, const struct wl_interface *interface, const void *implementation)</argsstring>
        <name>wl_resource_instance_of</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="786" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="786" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a6eac87009589e0bdc52830833ca46694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_add_destroy_listener</definition>
        <argsstring>(struct wl_resource *resource, struct wl_listener *listener)</argsstring>
        <name>wl_resource_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="795" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="795" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a46364ef94b5671f41f4cb9587070b23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_resource_get_destroy_listener</definition>
        <argsstring>(struct wl_resource *resource, wl_notify_func_t notify)</argsstring>
        <name>wl_resource_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="805" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="805" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9062fe6277721ec5b4b7d3cec9e34981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_add_destroy_listener</definition>
        <argsstring>(struct wl_client *client, struct wl_listener *listener)</argsstring>
        <name>wl_client_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="826" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="826" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a6f20471027c1fe02e79af96426ef5bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_client_get_destroy_listener</definition>
        <argsstring>(struct wl_client *client, wl_notify_func_t notify)</argsstring>
        <name>wl_client_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="833" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="833" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_destroy</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_destroy</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="840" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="840" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a2607bbfbd9465fb220bd5e32956e31a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wl_global_is_visible</definition>
        <argsstring>(const struct wl_client *client, const struct wl_global *global)</argsstring>
        <name>wl_global_is_visible</name>
        <param>
          <type>const struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="862" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="862" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a544722ec6870ffc3b1710e372a6a2ca0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void registry_bind</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t name, const char *interface, uint32_t version, uint32_t id)</argsstring>
        <name>registry_bind</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="872" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="872" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ab959fd43e51921133cd16adb7c78f93b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void display_sync</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>display_sync</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="910" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="910" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1abc7611c7625fe7037be956da53b4104f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void unbind_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>unbind_resource</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="928" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="928" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a5a6e0098b0e0f468a7a392873e268caa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void display_get_registry</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id)</argsstring>
        <name>display_get_registry</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="934" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="934" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ace2b4e94afe6d7573eacd92fd28e450e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_client_display_resource</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_client_display_resource</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="970" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="970" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wl_socket_destroy</definition>
        <argsstring>(struct wl_socket *s)</argsstring>
        <name>wl_socket_destroy</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1041" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1041" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a7740f08a433d77715d55dd09f1f248c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
        <definition>static struct wl_socket* wl_socket_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>wl_socket_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1058" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1058" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a85f5bc1c041738f5663835c5565ce0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
        <definition>struct wl_global* wl_global_create</definition>
        <argsstring>(struct wl_display *display, const struct wl_interface *interface, int version, void *data, wl_global_bind_func_t bind)</argsstring>
        <name>wl_global_create</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref></type>
          <declname>bind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1141" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1141" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ab466d94d1f204fb5f07c57e5f558ab7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_global_destroy</definition>
        <argsstring>(struct wl_global *global)</argsstring>
        <name>wl_global_destroy</name>
        <param>
          <type>struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1185" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1185" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a82c2f11ffbb50bdb57e07e275b2362e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
        <definition>const struct wl_interface* wl_global_get_interface</definition>
        <argsstring>(const struct wl_global *global)</argsstring>
        <name>wl_global_get_interface</name>
        <param>
          <type>const struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1198" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1198" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ac8aa5d6a692cd28378c051b6a35c41da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wl_global_get_user_data</definition>
        <argsstring>(const struct wl_global *global)</argsstring>
        <name>wl_global_get_user_data</name>
        <param>
          <type>const struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1204" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1204" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1afe7a4b1d6fbf166a66f686c830e2946c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
        <definition>struct wl_event_loop* wl_display_get_event_loop</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_get_event_loop</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1242" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1242" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a40e3041d2432d3941b3e8eb96c5284dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_terminate</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_terminate</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1248" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1248" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a999da1b9acb5808a3bbad60aaed8a7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_run</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_run</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1254" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1254" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1aeb502f6fdde16d9ee08f31aed040355f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_flush_clients</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_flush_clients</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1265" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1265" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1afc683f52b30928c97361bde1de47fd3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int socket_data</definition>
        <argsstring>(int fd, uint32_t mask, void *data)</argsstring>
        <name>socket_data</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1321" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1321" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a85ce9bda5a5265785cb274d0bfd86932" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_socket_lock</definition>
        <argsstring>(struct wl_socket *socket)</argsstring>
        <name>wl_socket_lock</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1341" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1341" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a545fda9306fd0870561dab4906b4682b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_socket_init_for_display_name</definition>
        <argsstring>(struct wl_socket *s, const char *name)</argsstring>
        <name>wl_socket_init_for_display_name</name>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1390" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1390" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a83bb0db9e4a3c64b5d551774c007f9d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _wl_display_add_socket</definition>
        <argsstring>(struct wl_display *display, struct wl_socket *s)</argsstring>
        <name>_wl_display_add_socket</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1426" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1426" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1af867e52066bc5fff5bb0c1d971735f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wl_display_add_socket_auto</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_add_socket_auto</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1458" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1458" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9ea24547f07538f2a326c42c7793b937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_add_destroy_listener</definition>
        <argsstring>(struct wl_display *display, struct wl_listener *listener)</argsstring>
        <name>wl_display_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1597" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1597" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a8c1cdf513c91fa498c4d9259eae3ed71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_add_client_created_listener</definition>
        <argsstring>(struct wl_display *display, struct wl_listener *listener)</argsstring>
        <name>wl_display_add_client_created_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Registers a listener for the client connection signal. </para>        </briefdescription>
        <detaileddescription>
<para>When a new client object is created, <emphasis>listener</emphasis> will be notified, carrying a pointer to the new <ref refid="structwl__client" kindref="compound">wl_client</ref> object.</para><para><ref refid="structwl__display_1aa2436b6a0b56cd65d8f6e33b76cd292c" kindref="member">wl_client_create</ref> <ref refid="structwl__display" kindref="compound">wl_display</ref> <ref refid="structwl__listener" kindref="compound">wl_listener</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>display</parametername>
</parameternamelist>
<parameterdescription>
<para>The display object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal handler object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1615" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1615" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1ad2e481a3157b1d182bb665a145230ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_display_get_destroy_listener</definition>
        <argsstring>(struct wl_display *display, wl_notify_func_t notify)</argsstring>
        <name>wl_display_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1622" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1622" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_implementation</definition>
        <argsstring>(struct wl_resource *resource, const void *implementation, void *data, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_implementation</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1629" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1629" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a6d127d9e4489ae795850a9b32d8c5637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_dispatcher</definition>
        <argsstring>(struct wl_resource *resource, wl_dispatcher_func_t dispatcher, const void *implementation, void *data, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_dispatcher</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-util_8h_1abdec454d1dffed08d355d225e21ac8bd" kindref="member">wl_dispatcher_func_t</ref></type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1640" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1640" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a0a0e1384dce2524161299fcd1669d59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_log_set_handler_server</definition>
        <argsstring>(wl_log_func_t handler)</argsstring>
        <name>wl_log_set_handler_server</name>
        <param>
          <type><ref refid="wayland-util_8h_1a8bbe3cc915acdaf00f7a183bf03d809c" kindref="member">wl_log_func_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1703" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1703" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server_8c_1a82b2c8234e539210317a2eeb440696e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref></type>
        <definition>static enum wl_iterator_result resource_iterator_helper</definition>
        <argsstring>(void *res, void *user_data, uint32_t flags)</argsstring>
        <name>resource_iterator_helper</name>
        <param>
          <type>void *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server.c" line="1883" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1895" bodyend="1901"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/un.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-util_8h" kindref="compound">wayland-util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-private.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-server_8h" kindref="compound">wayland-server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>char<sp/>array<sp/>in<sp/>struct<sp/>sock_addr_un.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>No<sp/>Wayland<sp/>socket<sp/>can<sp/>be<sp/>created<sp/>with<sp/>a<sp/>path<sp/>longer<sp/>than<sp/>this,</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>including<sp/>the<sp/>null<sp/>terminator.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIX_PATH_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIX_PATH_MAX<sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCK_SUFFIX<sp/><sp/><sp/><sp/><sp/>&quot;.lock&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOCK_SUFFIXLEN<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structwl__socket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>addr;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>[<ref refid="wayland-server_8c_1a7baab2aa5bf8eb14b6128e0f16634837" kindref="member">UNIX_PATH_MAX</ref><sp/>+<sp/><ref refid="wayland-server_8c_1a55f0760f271ff025b986de41b1e9f11e" kindref="member">LOCK_SUFFIXLEN</ref>];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwl__socket_1a9eaeecac943dd82e21b1b3f758b9ed9c" kindref="member">display_name</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structwl__client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_connection<sp/>*connection;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*display_resource;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_map<sp/>objects;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_priv_signal<sp/>destroy_signal;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ucred<sp/>ucred;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_priv_signal<sp/>resource_created_signal;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structwl__display" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>registry_resource_list;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>global_list;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>socket_list;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>client_list;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>protocol_loggers;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_priv_signal<sp/>destroy_signal;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_priv_signal<sp/>create_client_signal;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__array" kindref="compound">wl_array</ref><sp/>additional_shm_formats;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" kindref="member">wl_display_global_filter_func_t</ref><sp/>global_filter;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*global_filter_data;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structwl__global" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwl__interface_1ac7b9bc6c0352b4100213109094ca55fa" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref><sp/>bind;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structwl__resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>object;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unfortunately<sp/>some<sp/>users<sp/>of<sp/>libwayland<sp/>(e.g.<sp/>mesa)<sp/>still<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>deprecated<sp/>wl_resource<sp/>struct,<sp/>even<sp/>if<sp/>creating<sp/>it<sp/>with<sp/>the<sp/>new</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_resource_create().<sp/>So<sp/>we<sp/>cannot<sp/>change<sp/>the<sp/>layout<sp/>of<sp/>the<sp/>struct</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unless<sp/>after<sp/>the<sp/>data<sp/>field.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>deprecated_destroy_signal;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-util_8h_1abdec454d1dffed08d355d225e21ac8bd" kindref="member">wl_dispatcher_func_t</ref><sp/>dispatcher;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_priv_signal<sp/>destroy_signal;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structwl__protocol__logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" kindref="member">wl_protocol_logger_func_t</ref><sp/>func;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wayland-server_8c_1a52867feb1b6939f5b17d7cac9b40927f" kindref="member">debug_server</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="wayland-server_8c_1a1cd4d754208ed7c774beb192cdb33e15" kindref="member">log_closure</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_closure<sp/>*closure,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*protocol_logger;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger__message" kindref="compound">wl_protocol_logger_message</ref><sp/>message;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a52867feb1b6939f5b17d7cac9b40927f" kindref="member">debug_server</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_print(closure,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>send);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;display-&gt;<ref refid="structwl__display_1a662a3081bed0349619bc7fe952fbb903" kindref="member">protocol_loggers</ref>))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="structwl__protocol__logger__message_1ac76d15d9c58adf12cb6f2586ee3bea2f" kindref="member">resource</ref><sp/>=<sp/><ref refid="structwl__protocol__logger__message_1ac76d15d9c58adf12cb6f2586ee3bea2f" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="structwl__protocol__logger__message_1a762bfff4501343e2e9806443ac02dbc9" kindref="member">message_opcode</ref><sp/>=<sp/>closure-&gt;opcode;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="structwl__protocol__logger__message_1a9bc84a1e7f16d30577a4c16d923452e5" kindref="member">message</ref><sp/>=<sp/>closure-&gt;message;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="structwl__protocol__logger__message_1ac30826cbe546d43b07d3fc78ae9a173d" kindref="member">arguments_count</ref><sp/>=<sp/>closure-&gt;count;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="structwl__protocol__logger__message_1a483319aeeebbf4f549122f7e52779c12" kindref="member">arguments</ref><sp/>=<sp/>closure-&gt;args;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(protocol_logger,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;display-&gt;<ref refid="structwl__display_1a662a3081bed0349619bc7fe952fbb903" kindref="member">protocol_loggers</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_logger-&gt;<ref refid="structwl__protocol__logger_1aec3f6877750bee41e198ee0ba86ec74a" kindref="member">func</ref>(protocol_logger-&gt;<ref refid="structwl__protocol__logger_1a6346ce5a1d65a1f6c8600da6cb1e0f88" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send<sp/>?<sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41afc9b7270d748f502309f9fe2efaba053" kindref="member">WL_PROTOCOL_LOGGER_EVENT</ref><sp/>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41af97aa1585e48a3e8ee7b7d1623b61836" kindref="member">WL_PROTOCOL_LOGGER_REQUEST</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="wayland-server_8c_1a5e6257b74e73e94c150cec6bd966c519" kindref="member">verify_objects</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signature<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a67ed5c9c748afbec4ba89d2cad8cfbd0" kindref="member">events</ref>[opcode].<ref refid="structwl__message_1afacc7f3dab82d04059c1d9879cad6647" kindref="member">signature</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">argument_details<sp/>arg;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*res;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>i;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>arg_count_for_signature(signature);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signature<sp/>=<sp/>get_next_argument(signature,<sp/>&amp;arg);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(arg.type)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*)<sp/>(args[i].o);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&amp;&amp;<sp/>res-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref><sp/>!=<sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;compositor<sp/>bug:<sp/>The<sp/>compositor<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tried<sp/>to<sp/>use<sp/>an<sp/>object<sp/>from<sp/>one<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;client<sp/>in<sp/>a<sp/>&apos;%s.%s&apos;<sp/>for<sp/>a<sp/>different<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;client.\n&quot;</highlight><highlight class="normal">,<sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a67ed5c9c748afbec4ba89d2cad8cfbd0" kindref="member">events</ref>[opcode].<ref refid="structwl__message_1a0def81dbfe6ee21dcf1b6ac037badda7" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="wayland-server_8c_1a824138de8eaf7463ca1585d66710c154" kindref="member">handle_array</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*send_func)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_closure<sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_connection<sp/>*))</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_closure<sp/>*closure;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-server_8c_1a5e6257b74e73e94c150cec6bd966c519" kindref="member">verify_objects</ref>(resource,<sp/>opcode,<sp/>args))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closure<sp/>=<sp/>wl_closure_marshal(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>opcode,<sp/>args,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a67ed5c9c748afbec4ba89d2cad8cfbd0" kindref="member">events</ref>[opcode]);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closure<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a1cd4d754208ed7c774beb192cdb33e15" kindref="member">log_closure</ref>(resource,<sp/>closure,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(send_func(closure,<sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_destroy(closure);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="wayland-server_8c_1a97deed922e68853cb3785947926d56a7" kindref="member">wl_resource_post_event_array</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a824138de8eaf7463ca1585d66710c154" kindref="member">handle_array</ref>(resource,<sp/>opcode,<sp/>args,<sp/>wl_closure_send);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,<sp/>...)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>args[WL_CLOSURE_MAX_ARGS];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>opcode);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_argument_from_va_list(object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a67ed5c9c748afbec4ba89d2cad8cfbd0" kindref="member">events</ref>[opcode].<ref refid="structwl__message_1afacc7f3dab82d04059c1d9879cad6647" kindref="member">signature</ref>,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,<sp/>WL_CLOSURE_MAX_ARGS,<sp/>ap);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a97deed922e68853cb3785947926d56a7" kindref="member">wl_resource_post_event_array</ref>(resource,<sp/>opcode,<sp/>args);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="wayland-server_8c_1a9b63bd8423712f6edebfd6dae9e48225" kindref="member">wl_resource_queue_event_array</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a824138de8eaf7463ca1585d66710c154" kindref="member">handle_array</ref>(resource,<sp/>opcode,<sp/>args,<sp/>wl_closure_queue);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="wayland-server_8c_1a67891685eff3a9ebd5371d78ca83d516" kindref="member">wl_resource_queue_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>opcode,<sp/>...)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>args[WL_CLOSURE_MAX_ARGS];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>opcode);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_argument_from_va_list(object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a67ed5c9c748afbec4ba89d2cad8cfbd0" kindref="member">events</ref>[opcode].<ref refid="structwl__message_1afacc7f3dab82d04059c1d9879cad6647" kindref="member">signature</ref>,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,<sp/>WL_CLOSURE_MAX_ARGS,<sp/>ap);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9b63bd8423712f6edebfd6dae9e48225" kindref="member">wl_resource_queue_event_array</ref>(resource,<sp/>opcode,<sp/>args);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client<sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[128];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msg);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsnprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>buffer,<sp/>msg,<sp/>ap);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>a<sp/>client<sp/>aborts,<sp/>its<sp/>resources<sp/>are<sp/>destroyed<sp/>in<sp/>id<sp/>order,</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>means<sp/>the<sp/>display<sp/>resource<sp/>is<sp/>destroyed<sp/>first.<sp/>If<sp/>destruction</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>any<sp/>later<sp/>resources<sp/>results<sp/>in<sp/>a<sp/>protocol<sp/>error,<sp/>we<sp/>end<sp/>up<sp/>here</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>a<sp/>NULL<sp/>display_resource.<sp/>Do<sp/>not<sp/>try<sp/>to<sp/>send<sp/>errors<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>already<sp/>dead<sp/>client.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref><sp/>||<sp/>!client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR,<sp/>resource,<sp/>code,<sp/>buffer);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" kindref="member">destroy_client_with_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reason)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;%s<sp/>(pid<sp/>%u)\n&quot;</highlight><highlight class="normal">,<sp/>reason,<sp/>client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>.pid);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(client);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="wayland-server_8c_1a9cc6d33e7551f411254c8e66cd074c9f" kindref="member">wl_client_connection_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_connection<sp/>*connection<sp/>=<sp/>client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__object" kindref="compound">wl_object</ref><sp/>*object;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_closure<sp/>*closure;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__message" kindref="compound">wl_message</ref><sp/>*message;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>p[2];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>resource_flags;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opcode,<sp/>size,<sp/>since;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2852f50f50cceb1ca26af633531a4c28" kindref="member">WL_EVENT_HANGUP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(client);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8546a495f91fe38b980468fa44986e04" kindref="member">WL_EVENT_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" kindref="member">destroy_client_with_error</ref>(client,<sp/></highlight><highlight class="stringliteral">&quot;socket<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" kindref="member">WL_EVENT_WRITABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>wl_connection_flush(connection);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>EAGAIN)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" kindref="member">destroy_client_with_error</ref>(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client,<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>flush<sp/>client<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe73f9ff59d489e9f27eb9c0e3058a02" kindref="member">wl_event_source_fd_update</ref>(client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>wl_connection_read(connection);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0<sp/>||<sp/>(len<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>EAGAIN))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" kindref="member">destroy_client_with_error</ref>(</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client,<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>read<sp/>client<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>len<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_connection_copy(connection,<sp/>p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>p);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opcode<sp/>=<sp/>p[1]<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>p[1]<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>size)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_map_lookup(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>p[0]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource_flags<sp/>=<sp/>wl_map_lookup_flags(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>p[0]);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>object<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>p[0]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>&gt;=<sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a520ae9776d4d26ea132d5a0768098d3d" kindref="member">method_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_METHOD,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>method<sp/>%d,<sp/>object<sp/>%s@%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opcode,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;interface-&gt;methods[opcode];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>=<sp/>wl_message_get_since(message);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(resource_flags<sp/>&amp;<sp/>WL_MAP_ENTRY_LEGACY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>resource-&gt;<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref><sp/>&lt;<sp/>since)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_METHOD,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>method<sp/>%d<sp/>(since<sp/>%d<sp/>&lt;<sp/>%d)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>object<sp/>%s@%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opcode,<sp/>resource-&gt;<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>,<sp/>since,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closure<sp/>=<sp/>wl_connection_demarshal(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>,<sp/>size,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>message);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closure<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOMEM)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1aefff369c8182adc3c29ea561e23b9fd8" kindref="member">wl_resource_post_no_memory</ref>(resource);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closure<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_lookup_objects(closure,<sp/>&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_METHOD,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>arguments<sp/>for<sp/>%s@%u.%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object-&gt;<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;<ref refid="structwl__message_1a0def81dbfe6ee21dcf1b6ac037badda7" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_destroy(closure);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a1cd4d754208ed7c774beb192cdb33e15" kindref="member">log_closure</ref>(resource,<sp/>closure,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resource_flags<sp/>&amp;<sp/>WL_MAP_ENTRY_LEGACY)<sp/>||</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_invoke(closure,<sp/>WL_CLOSURE_INVOKE_SERVER,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>opcode,<sp/>client);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_dispatch(closure,<sp/>resource-&gt;<ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref>,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>opcode);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_closure_destroy(closure);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>wl_connection_pending_input(connection);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1acc5b5780b11a183c0b8314373f3c70e7" kindref="member">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc723baaad062678a5cb1366472ba84a" kindref="member">destroy_client_with_error</ref>(client,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>client<sp/>communication&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="wayland-server-core_8h_1a6a045ad15d6ca216c4da41ba67c9ef4a" kindref="member">wl_client_flush</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_connection_flush(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="wayland-server-core_8h_1a1a69200af1f06ccbcd218b2328f3c885" kindref="member">wl_client_get_display</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client-&gt;<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="wayland-server_8c_1a9ca6bf2b19fc16d56ec13d584adc32d0" kindref="member">bind_display</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="wayland-server-core_8h_1afb954d2c512f4d0140e25cd331c2cd9f" kindref="member">wl_client_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>len;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>zalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*client);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_init(&amp;client-&gt;<ref refid="structwl__client_1adf241e87b420a24141f11cafc589bd5c" kindref="member">resource_created_signal</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref><sp/>=<sp/><ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref><sp/>=<sp/><ref refid="wayland-server-core_8h_1a677f7df496a70388151e56a88c46ad36" kindref="member">wl_event_loop_add_fd</ref>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>,<sp/>fd,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9cc6d33e7551f411254c8e66cd074c9f" kindref="member">wl_client_connection_data</ref>,<sp/>client);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_client;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockopt(fd,<sp/>SOL_SOCKET,<sp/>SO_PEERCRED,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>,<sp/>&amp;len)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_source;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref><sp/>=<sp/>wl_connection_create(fd);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_source;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_init(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>WL_MAP_SERVER_SIDE);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_map_insert_at(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>0,<sp/>0,<sp/>NULL)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_map;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_init(&amp;client-&gt;<ref refid="structwl__client_1abead69829272547757152abf1d780519" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a9ca6bf2b19fc16d56ec13d584adc32d0" kindref="member">bind_display</ref>(client,<sp/>display)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_map;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>.<ref refid="structwl__list_1a72c2827d3103691f9e3299babfbf0704" kindref="member">prev</ref>,<sp/>&amp;client-&gt;<ref refid="structwl__client_1a2f868addcc86bfb4de9d50d4b28c18e7" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_emit(&amp;display-&gt;<ref refid="structwl__display_1af4eb55355f6bba19c2c4d519fa9a770e" kindref="member">create_client_signal</ref>,<sp/>client);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal">err_map:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_release(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_connection_destroy(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">err_source:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">err_client:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(client);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="wayland-server-core_8h_1a82a97cb3a66c1c56826a09a7b42453d9" kindref="member">wl_client_get_credentials</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>*pid,<sp/>uid_t<sp/>*uid,<sp/>gid_t<sp/>*gid)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pid<sp/>=<sp/>client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>.pid;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*uid<sp/>=<sp/>client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>.uid;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gid)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gid<sp/>=<sp/>client-&gt;<ref refid="structwl__client_1a9780e51f9406d6c7f15d08b6fd2b46b1" kindref="member">ucred</ref>.gid;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="wayland-server-core_8h_1ad5a94921b39efad0985632e865479ca2" kindref="member">wl_client_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_connection_get_fd(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><ref refid="wayland-server-core_8h_1aa589ab039ac7e67a9da5ccdada9fcb4c" kindref="member">wl_client_get_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_map_lookup(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_NO_MEMORY,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><ref refid="wayland-server_8c_1aefff369c8182adc3c29ea561e23b9fd8" kindref="member">wl_resource_post_no_memory</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_NO_MEMORY,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><ref refid="wayland-server_8c_1a8783de35d9cb8c7ce05efc716ce1a31a" kindref="member">resource_is_deprecated</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_map<sp/>*map<sp/>=<sp/>&amp;resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_client_add_resource()<sp/>marks<sp/>deprecated<sp/>resources<sp/>with<sp/>the<sp/>flag.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_map_lookup_flags(map,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>&amp;<sp/>WL_MAP_ENTRY_LEGACY)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><ref refid="wayland-server_8c_1a942be7eb6c103bab38bac6f3b608e013" kindref="member">destroy_resource</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*element,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;resource-&gt;<ref refid="structwl__resource_1a1182726dd855c862d13660e1de3c1334" kindref="member">deprecated_destroy_signal</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>emit<sp/>the<sp/>new<sp/>signal<sp/>for<sp/>deprecated<sp/>resources,<sp/>as<sp/>that<sp/>would</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>access<sp/>memory<sp/>outside<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>deprecated<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-server_8c_1a8783de35d9cb8c7ce05efc716ce1a31a" kindref="member">resource_is_deprecated</ref>(resource))</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_final_emit(&amp;resource-&gt;<ref refid="structwl__resource_1a7795d0d1661fc92c16d39d9949766f89" kindref="member">destroy_signal</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref>(resource);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>WL_MAP_ENTRY_LEGACY))</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(resource);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23a1929018870618c4f5bc7511973847edc" kindref="member">WL_ITERATOR_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="wayland-server_8c_1a4fd83132742252516c9a3df7f4eaa4d7" kindref="member">wl_resource_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client<sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>flags;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>wl_map_lookup_flags(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a942be7eb6c103bab38bac6f3b608e013" kindref="member">destroy_resource</ref>(resource,<sp/>NULL,<sp/>flags);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>WL_SERVER_ID_START)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a67891685eff3a9ebd5371d78ca83d516" kindref="member">wl_resource_queue_event</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_DELETE_ID,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_insert_at(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>0,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_remove(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="wayland-server_8c_1ae265d2902bc8e0994b26a3f43e63448c" kindref="member">wl_resource_get_id</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><ref refid="wayland-server_8c_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;resource-&gt;<ref refid="structwl__resource_1a248afa389fec5d0a07f945b47e303ebc" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><ref refid="wayland-server_8c_1a9851271c75c89ed572987126278834d9" kindref="member">wl_resource_from_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*link)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wayland-util_8h_1a09e3b64ee2195e1b80191aa1884d45aa" kindref="member">wl_container_of</ref>(link,<sp/>resource,<sp/>link);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><ref refid="wayland-server_8c_1a4ac3fbd1d228f441c6846f3ebccc9c6e" kindref="member">wl_resource_find_for_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*list,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(resource,<sp/>list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref><sp/>==<sp/>client)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="wayland-server_8c_1a300147832089811f11d345fbc3f47fe6" kindref="member">wl_resource_get_client</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><ref refid="wayland-server_8c_1aa9b40199dbf513b6a25263872b8490c6" kindref="member">wl_resource_set_user_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="wayland-server_8c_1a8f0f7d0b0f0fb9f44ccd3694b3dd58d5" kindref="member">wl_resource_get_version</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><ref refid="wayland-server_8c_1ab69024ab2f0f502aa70cf18bb2761882" kindref="member">wl_resource_set_destructor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref><sp/>=<sp/>destroy;</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="wayland-server_8c_1a8849a58c3ba7a528c643591369125844" kindref="member">wl_resource_instance_of</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_interface_equal(resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>,<sp/>interface)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a7478578f273f986624ecc26acfd4e6c2" kindref="member">implementation</ref><sp/>==<sp/>implementation;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><ref refid="wayland-server_8c_1a6eac87009589e0bdc52830833ca46694" kindref="member">wl_resource_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*<sp/>listener)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a8783de35d9cb8c7ce05efc716ce1a31a" kindref="member">resource_is_deprecated</ref>(resource))</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;resource-&gt;<ref refid="structwl__resource_1a1182726dd855c862d13660e1de3c1334" kindref="member">deprecated_destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_add(&amp;resource-&gt;<ref refid="structwl__resource_1a7795d0d1661fc92c16d39d9949766f89" kindref="member">destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><ref refid="wayland-server_8c_1a46364ef94b5671f41f4cb9587070b23f" kindref="member">wl_resource_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a8783de35d9cb8c7ce05efc716ce1a31a" kindref="member">resource_is_deprecated</ref>(resource))</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_signal_get(&amp;resource-&gt;<ref refid="structwl__resource_1a1182726dd855c862d13660e1de3c1334" kindref="member">deprecated_destroy_signal</ref>,<sp/>notify);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_priv_signal_get(&amp;resource-&gt;<ref refid="structwl__resource_1a7795d0d1661fc92c16d39d9949766f89" kindref="member">destroy_signal</ref>,<sp/>notify);</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><ref refid="wayland-server-core_8h_1ae570127d26c63db09db82afa3a8cda2d" kindref="member">wl_resource_get_class</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><ref refid="wayland-server_8c_1a9062fe6277721ec5b4b7d3cec9e34981" kindref="member">wl_client_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_add(&amp;client-&gt;<ref refid="structwl__client_1abead69829272547757152abf1d780519" kindref="member">destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="wayland-server_8c_1a6f20471027c1fe02e79af96426ef5bf4" kindref="member">wl_client_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_priv_signal_get(&amp;client-&gt;<ref refid="structwl__client_1abead69829272547757152abf1d780519" kindref="member">destroy_signal</ref>,<sp/>notify);</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><ref refid="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_final_emit(&amp;client-&gt;<ref refid="structwl__client_1abead69829272547757152abf1d780519" kindref="member">destroy_signal</ref>,<sp/>client);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a6a045ad15d6ca216c4da41ba67c9ef4a" kindref="member">wl_client_flush</ref>(client);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_for_each(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/><ref refid="wayland-server_8c_1a942be7eb6c103bab38bac6f3b608e013" kindref="member">destroy_resource</ref>,<sp/>&amp;serial);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_release(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(wl_connection_destroy(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;client-&gt;<ref refid="structwl__client_1a2f868addcc86bfb4de9d50d4b28c18e7" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;client-&gt;<ref refid="structwl__client_1adf241e87b420a24141f11cafc589bd5c" kindref="member">resource_created_signal</ref>.listener_list);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(client);</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>a<sp/>global<sp/>filter<sp/>is<sp/>registered<sp/>and<sp/>use<sp/>it<sp/>if<sp/>any.</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*<sp/>If<sp/>no<sp/>wl_global<sp/>filter<sp/>has<sp/>been<sp/>registered,<sp/>this<sp/>funtion<sp/>will</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*<sp/>return<sp/>true,<sp/>allowing<sp/>the<sp/>wl_global<sp/>to<sp/>be<sp/>visible<sp/>to<sp/>the<sp/>wl_client</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="wayland-server_8c_1a2607bbfbd9465fb220bd5e32956e31a0" kindref="member">wl_global_is_visible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>client-&gt;<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(display-&gt;<ref refid="structwl__display_1ab8546912b40cbd9a27db5483cdf4adf0" kindref="member">global_filter</ref><sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1ab8546912b40cbd9a27db5483cdf4adf0" kindref="member">global_filter</ref>(client,<sp/>global,<sp/>display-&gt;<ref refid="structwl__display_1a4fe5fcd6fefd4a542c18e2426c3ce47b" kindref="member">global_filter_data</ref>));</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><ref refid="wayland-server_8c_1a544722ec6870ffc3b1710e372a6a2ca0" kindref="member">registry_bind</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/>name,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*interface,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(global,<sp/>&amp;display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(global-&gt;<ref refid="structwl__global_1a0c07ec0d4bae8e6b8e746f183f23ecc5" kindref="member">name</ref><sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;global-&gt;<ref refid="structwl__global_1ac7dcf03d4c788d132038d52d2fdcc19e" kindref="member">link</ref><sp/>==<sp/>&amp;display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>global<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,<sp/>interface,<sp/>name);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>version<sp/>for<sp/>global<sp/>%s<sp/>(%d):<sp/>0<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>version&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface,<sp/>name);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(global-&gt;<ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref><sp/>&lt;<sp/>version)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>version<sp/>for<sp/>global<sp/>%s<sp/>(%d):<sp/>have<sp/>%d,<sp/>wanted<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface,<sp/>name,<sp/>global-&gt;<ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref>,<sp/>version);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-server_8c_1a2607bbfbd9465fb220bd5e32956e31a0" kindref="member">wl_global_is_visible</ref>(client,<sp/>global))</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>global<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,<sp/>interface,<sp/>name);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref>(client,<sp/>global-&gt;<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>,<sp/>version,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_registry_interface<sp/><ref refid="wayland-server_8c_1aa4c206ce0f7af5d09e5fe6506cfeabd7" kindref="member">registry_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a544722ec6870ffc3b1710e372a6a2ca0" kindref="member">registry_bind</ref></highlight></codeline>
<codeline lineno="907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><ref refid="wayland-server_8c_1ab959fd43e51921133cd16adb7c78f93b" kindref="member">display_sync</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*callback;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>=<sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_callback_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>=<sp/><ref refid="wayland-server-core_8h_1a43f04f76ea1457edcf37c95de68b29ef" kindref="member">wl_display_get_serial</ref>(client-&gt;<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_callback_send_done(callback,<sp/>serial);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a4fd83132742252516c9a3df7f4eaa4d7" kindref="member">wl_resource_destroy</ref>(callback);</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><ref refid="wayland-server_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;resource-&gt;<ref refid="structwl__resource_1a248afa389fec5d0a07f945b47e303ebc" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><ref refid="wayland-server_8c_1a5a6e0098b0e0f468a7a392873e268caa" kindref="member">display_get_registry</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*registry_resource;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registry_resource<sp/>=</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_registry_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registry_resource<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(registry_resource,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="wayland-server_8c_1aa4c206ce0f7af5d09e5fe6506cfeabd7" kindref="member">registry_interface</ref>,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display,<sp/><ref refid="wayland-server_8c_1abc7611c7625fe7037be956da53b4104f" kindref="member">unbind_resource</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;display-&gt;<ref refid="structwl__display_1adacf20b879ad10677d0442c3a5469923" kindref="member">registry_resource_list</ref>,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;registry_resource-&gt;<ref refid="structwl__resource_1a248afa389fec5d0a07f945b47e303ebc" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(global,<sp/>&amp;display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a2607bbfbd9465fb220bd5e32956e31a0" kindref="member">wl_global_is_visible</ref>(client,<sp/>global))</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(registry_resource,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_REGISTRY_GLOBAL,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a0c07ec0d4bae8e6b8e746f183f23ecc5" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1ae1d0a630338a47aab0af3c3a00a31459" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display_interface<sp/><ref refid="wayland-server_8c_1a41aff09d441b40a4e816bc23333701f7" kindref="member">display_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ab959fd43e51921133cd16adb7c78f93b" kindref="member">display_sync</ref>,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a5a6e0098b0e0f468a7a392873e268caa" kindref="member">display_get_registry</ref></highlight></codeline>
<codeline lineno="967"><highlight class="normal">};</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><ref refid="wayland-server_8c_1ace2b4e94afe6d7573eacd92fd28e450e" kindref="member">destroy_client_display_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><ref refid="wayland-server_8c_1a9ca6bf2b19fc16d56ec13d584adc32d0" kindref="member">bind_display</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref><sp/>=</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_display_interface,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DON&apos;T<sp/>send<sp/>no-memory<sp/>error<sp/>to<sp/>client<sp/>-<sp/>it<sp/>has<sp/>no</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>resource<sp/>to<sp/>which<sp/>it<sp/>could<sp/>post<sp/>the<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="wayland-server_8c_1a41aff09d441b40a4e816bc23333701f7" kindref="member">display_interface</ref>,<sp/>display,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ace2b4e94afe6d7573eacd92fd28e450e" kindref="member">destroy_client_display_resource</ref>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><ref refid="wayland-server-core_8h_1a496bcdc506013f5fd47641777deb9618" kindref="member">wl_display_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*debug;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WAYLAND_DEBUG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug<sp/>&amp;&amp;<sp/>(strstr(debug,<sp/></highlight><highlight class="stringliteral">&quot;server&quot;</highlight><highlight class="normal">)<sp/>||<sp/>strstr(debug,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a52867feb1b6939f5b17d7cac9b40927f" kindref="member">debug_server</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*display);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref><sp/>=<sp/><ref refid="wayland-server-core_8h_1adf933ad178be05536668da731acc6871" kindref="member">wl_event_loop_create</ref>();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(display);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1ad8445133a3aec3add2022011d1c5e8b2" kindref="member">socket_list</ref>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1adacf20b879ad10677d0442c3a5469923" kindref="member">registry_resource_list</ref>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1a662a3081bed0349619bc7fe952fbb903" kindref="member">protocol_loggers</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_init(&amp;display-&gt;<ref refid="structwl__display_1abb413b6d494454c0fc5eb801b7009e4d" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_init(&amp;display-&gt;<ref refid="structwl__display_1af4eb55355f6bba19c2c4d519fa9a770e" kindref="member">create_client_signal</ref>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a864360d97771499c07e33a4ba3948bf7" kindref="member">id</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a2178a84b8d12090f53299a3d87a6f433" kindref="member">serial</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1ab8546912b40cbd9a27db5483cdf4adf0" kindref="member">global_filter</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a4fe5fcd6fefd4a542c18e2426c3ce47b" kindref="member">global_filter_data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_init(&amp;display-&gt;<ref refid="structwl__display_1a34b8b1a96ad8a692986c5c0889376cfa" kindref="member">additional_shm_formats</ref>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref>)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path[0])</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>[0])</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(s-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><ref refid="wayland-server_8c_1a7740f08a433d77715d55dd09f1f248c9" kindref="member">wl_socket_alloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>zalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><ref refid="wayland-server-core_8h_1acd9ad2e1ca3ffb0ba0f1b77ae616f8ee" kindref="member">wl_display_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s,<sp/>*next;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global,<sp/>*gnext;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_final_emit(&amp;display-&gt;<ref refid="structwl__display_1abb413b6d494454c0fc5eb801b7009e4d" kindref="member">destroy_signal</ref>,<sp/>display);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(s,<sp/>next,<sp/>&amp;display-&gt;<ref refid="structwl__display_1ad8445133a3aec3add2022011d1c5e8b2" kindref="member">socket_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1ad50f13e2c738e68f7576757aa862513a" kindref="member">wl_event_loop_destroy</ref>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(global,<sp/>gnext,<sp/>&amp;display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(global);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_array_release(&amp;display-&gt;<ref refid="structwl__display_1a34b8b1a96ad8a692986c5c0889376cfa" kindref="member">additional_shm_formats</ref>);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;display-&gt;<ref refid="structwl__display_1a662a3081bed0349619bc7fe952fbb903" kindref="member">protocol_loggers</ref>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(display);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><ref refid="wayland-server-core_8h_1a3905b9734d8bb84f2c851bb4abbc52f8" kindref="member">wl_display_set_global_filter</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" kindref="member">wl_display_global_filter_func_t</ref><sp/>filter,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1ab8546912b40cbd9a27db5483cdf4adf0" kindref="member">global_filter</ref><sp/>=<sp/>filter;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a4fe5fcd6fefd4a542c18e2426c3ce47b" kindref="member">global_filter_data</ref><sp/>=<sp/><ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><ref refid="wayland-server_8c_1a85f5bc1c041738f5663835c5565ce0b8" kindref="member">wl_global_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref>,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>,<sp/><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref><sp/><ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref>)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;wl_global_create:<sp/>failing<sp/>to<sp/>create<sp/>interface<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>with<sp/>version<sp/>%d<sp/>because<sp/>it<sp/>is<sp/>less<sp/>than<sp/>1\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,<sp/><ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref><sp/>&gt;<sp/>interface-&gt;<ref refid="structwl__interface_1ac7b9bc6c0352b4100213109094ca55fa" kindref="member">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;wl_global_create:<sp/>implemented<sp/>version<sp/>for<sp/>&apos;%s&apos;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;higher<sp/>than<sp/>interface<sp/>version<sp/>(%d<sp/>&gt;<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,<sp/><ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>,<sp/>interface-&gt;<ref refid="structwl__interface_1ac7b9bc6c0352b4100213109094ca55fa" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*global);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(global<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a3ac41deda1861eebace2336684054527" kindref="member">display</ref><sp/>=<sp/>display;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a0c07ec0d4bae8e6b8e746f183f23ecc5" kindref="member">name</ref><sp/>=<sp/>display-&gt;<ref refid="structwl__display_1a864360d97771499c07e33a4ba3948bf7" kindref="member">id</ref>++;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1ae1d0a630338a47aab0af3c3a00a31459" kindref="member">interface</ref><sp/>=<sp/>interface;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref><sp/>=<sp/><ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref><sp/>=<sp/><ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref><sp/>=<sp/>bind;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(display-&gt;<ref refid="structwl__display_1a8eafb443ae6bcbf1ee8fc227aa5c1694" kindref="member">global_list</ref>.<ref refid="structwl__list_1a72c2827d3103691f9e3299babfbf0704" kindref="member">prev</ref>,<sp/>&amp;global-&gt;<ref refid="structwl__global_1ac7dcf03d4c788d132038d52d2fdcc19e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(resource,<sp/>&amp;display-&gt;<ref refid="structwl__display_1adacf20b879ad10677d0442c3a5469923" kindref="member">registry_resource_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(resource,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_REGISTRY_GLOBAL,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a0c07ec0d4bae8e6b8e746f183f23ecc5" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1ae1d0a630338a47aab0af3c3a00a31459" kindref="member">interface</ref>-&gt;<ref refid="structwl__interface_1a3ee0780631cad42bcc90a8deb76caec8" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a9fbdb3d5a4f47de7b3c8184af910244b" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><ref refid="wayland-server_8c_1ab466d94d1f204fb5f07c57e5f558ab7a" kindref="member">wl_global_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>global-&gt;<ref refid="structwl__global_1a3ac41deda1861eebace2336684054527" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(resource,<sp/>&amp;display-&gt;<ref refid="structwl__display_1adacf20b879ad10677d0442c3a5469923" kindref="member">registry_resource_list</ref>,<sp/>link)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(resource,<sp/>WL_REGISTRY_GLOBAL_REMOVE,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global-&gt;<ref refid="structwl__global_1a0c07ec0d4bae8e6b8e746f183f23ecc5" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;global-&gt;<ref refid="structwl__global_1ac7dcf03d4c788d132038d52d2fdcc19e" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(global);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><ref refid="wayland-server_8c_1a82c2f11ffbb50bdb57e07e275b2362e6" kindref="member">wl_global_get_interface</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global-&gt;<ref refid="structwl__global_1ae1d0a630338a47aab0af3c3a00a31459" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><ref refid="wayland-server_8c_1ac8aa5d6a692cd28378c051b6a35c41da" kindref="member">wl_global_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global-&gt;<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><ref refid="wayland-server-core_8h_1a43f04f76ea1457edcf37c95de68b29ef" kindref="member">wl_display_get_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display-&gt;<ref refid="structwl__display_1a2178a84b8d12090f53299a3d87a6f433" kindref="member">serial</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><ref refid="wayland-server-core_8h_1a145f7d3e4b41fc9014c11bf01bd7eb4f" kindref="member">wl_display_next_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1a2178a84b8d12090f53299a3d87a6f433" kindref="member">serial</ref>++;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display-&gt;<ref refid="structwl__display_1a2178a84b8d12090f53299a3d87a6f433" kindref="member">serial</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><ref refid="wayland-server_8c_1afe7a4b1d6fbf166a66f686c830e2946c" kindref="member">wl_display_get_event_loop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><ref refid="wayland-server_8c_1a40e3041d2432d3941b3e8eb96c5284dc" kindref="member">wl_display_terminate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1aef9cf1c5f1b4fcaa4d7607bd82d0a093" kindref="member">run</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><ref refid="wayland-server_8c_1a999da1b9acb5808a3bbad60aaed8a7ff" kindref="member">wl_display_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display-&gt;<ref refid="structwl__display_1aef9cf1c5f1b4fcaa4d7607bd82d0a093" kindref="member">run</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(display-&gt;<ref refid="structwl__display_1aef9cf1c5f1b4fcaa4d7607bd82d0a093" kindref="member">run</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1aeb502f6fdde16d9ee08f31aed040355f" kindref="member">wl_display_flush_clients</ref>(display);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aaa3fdd5590365a4a2106c9814ca9b31b" kindref="member">wl_event_loop_dispatch</ref>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><ref refid="wayland-server_8c_1aeb502f6fdde16d9ee08f31aed040355f" kindref="member">wl_display_flush_clients</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/>*next;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(client,<sp/>next,<sp/>&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>wl_connection_flush(client-&gt;<ref refid="structwl__client_1a2b9ba402199671abbd4f7d7ad36b31f8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EAGAIN)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe73f9ff59d489e9f27eb9c0e3058a02" kindref="member">wl_event_source_fd_update</ref>(client-&gt;<ref refid="structwl__client_1a851bbb4ea60e722d4ff4260394491e11" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" kindref="member">WL_EVENT_WRITABLE</ref><sp/>|</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(client);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><ref refid="wayland-server-core_8h_1ab50365739904f91579a66f4b054a3ecb" kindref="member">wl_display_destroy_clients</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>tmp_client_list,<sp/>*pos;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>whole<sp/>client<sp/>list<sp/>to<sp/>a<sp/>temporary<sp/>head<sp/>because<sp/>some<sp/>new<sp/>clients</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>might<sp/>be<sp/>added<sp/>to<sp/>the<sp/>original<sp/>head.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;tmp_client_list);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert_list(&amp;tmp_client_list,<sp/>&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wl_list_for_each_safe<sp/>isn&apos;t<sp/>enough<sp/>here:<sp/>it<sp/>fails<sp/>if<sp/>the<sp/>next<sp/>client<sp/>is</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>destroyed<sp/>by<sp/>the<sp/>destroy<sp/>handler<sp/>of<sp/>the<sp/>current<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;tmp_client_list))<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>tmp_client_list.<ref refid="structwl__list_1aa0454596900ed769fb2f033fbb96bf2c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/><ref refid="wayland-util_8h_1a09e3b64ee2195e1b80191aa1884d45aa" kindref="member">wl_container_of</ref>(pos,<sp/>client,<sp/>link);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(client);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;wl_display_destroy_clients:<sp/>cannot<sp/>destroy<sp/>all<sp/>clients<sp/>because<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;new<sp/>ones<sp/>were<sp/>created<sp/>by<sp/>destroy<sp/>callbacks\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><ref refid="wayland-server_8c_1afc683f52b30928c97361bde1de47fd3e" kindref="member">socket_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>name;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>length;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>client_fd;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_fd<sp/>=<sp/>wl_os_accept_cloexec(<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;name,</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;length);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>accept:<sp/>%m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-server-core_8h_1afb954d2c512f4d0140e25cd331c2cd9f" kindref="member">wl_client_create</ref>(display,<sp/>client_fd))</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(client_fd);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><ref refid="wayland-server_8c_1a85ce9bda5a5265785cb274d0bfd86932" kindref="member">wl_socket_lock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*socket)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>socket_stat;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/><ref refid="wayland-server_8c_1a11aa03fdbf1a2680335dcaa0c73f25e3" kindref="member">LOCK_SUFFIX</ref>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>open(socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>,<sp/>O_CREAT<sp/>|<sp/>O_CLOEXEC,</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(S_IRUSR<sp/>|<sp/>S_IWUSR<sp/>|<sp/>S_IRGRP<sp/>|<sp/>S_IWGRP));</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>open<sp/>lockfile<sp/>%s<sp/>check<sp/>permissions\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flock(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>,<sp/>LOCK_EX<sp/>|<sp/>LOCK_NB)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>lock<sp/>lockfile<sp/>%s,<sp/>maybe<sp/>another<sp/>compositor<sp/>is<sp/>running\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_fd;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/>&amp;socket_stat)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>ENOENT)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;did<sp/>not<sp/>manage<sp/>to<sp/>stat<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_fd;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_stat.st_mode<sp/>&amp;<sp/>S_IWUSR<sp/>||</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_stat.st_mode<sp/>&amp;<sp/>S_IWGRP)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink(socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">err_fd:</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref>);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;<ref refid="structwl__socket_1addbfff96411375cc5db3a446a42a3dd5" kindref="member">fd_lock</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*socket-&gt;<ref refid="structwl__socket_1a27d2689a9962252d1859549ae871acab" kindref="member">lock_addr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>did<sp/>not<sp/>set<sp/>this<sp/>value<sp/>here,<sp/>but<sp/>without<sp/>lock<sp/>the</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>socket<sp/>won&apos;t<sp/>be<sp/>created<sp/>anyway.<sp/>This<sp/>prevents<sp/>the</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_socket_destroy<sp/>from<sp/>unlinking<sp/>already<sp/>existing<sp/>socket</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>created<sp/>by<sp/>other<sp/>compositor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*socket-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><ref refid="wayland-server_8c_1a545fda9306fd0870561dab4906b4682b" kindref="member">wl_socket_init_for_display_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_size;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runtime_dir;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runtime_dir<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;XDG_RUNTIME_DIR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!runtime_dir)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;error:<sp/>XDG_RUNTIME_DIR<sp/>not<sp/>set<sp/>in<sp/>the<sp/>environment\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>prevent<sp/>programs<sp/>reporting</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;failed<sp/>to<sp/>add<sp/>socket:<sp/>Success&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOENT;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_family<sp/>=<sp/>AF_LOCAL;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_size<sp/>=<sp/>snprintf(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>runtime_dir,<sp/>name)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a9eaeecac943dd82e21b1b3f758b9ed9c" kindref="member">display_name</ref><sp/>=<sp/>(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path<sp/>+<sp/>name_size<sp/>-<sp/>1)<sp/>-<sp/>strlen(name);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(name_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name_size<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;error:<sp/>socket<sp/>path<sp/>\&quot;%s/%s\&quot;<sp/>plus<sp/>null<sp/>terminator&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>exceeds<sp/>108<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/>runtime_dir,<sp/>name);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>prevent<sp/>programs<sp/>reporting</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;failed<sp/>to<sp/>add<sp/>socket:<sp/>Success&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><ref refid="wayland-server_8c_1a83bb0db9e4a3c64b5d551774c007f9d1" kindref="member">_wl_display_add_socket</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>size;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>=<sp/>wl_os_socket_cloexec(PF_LOCAL,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>offsetof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_un,<sp/>sun_path)<sp/>+<sp/>strlen(s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>.sun_path);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;s-&gt;<ref refid="structwl__socket_1a13ffab6a53a117753bf5082483e77be0" kindref="member">addr</ref>,<sp/>size)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;bind()<sp/>failed<sp/>with<sp/>error:<sp/>%m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen(s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,<sp/>128)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;listen()<sp/>failed<sp/>with<sp/>error:<sp/>%m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref><sp/>=<sp/><ref refid="wayland-server-core_8h_1a677f7df496a70388151e56a88c46ad36" kindref="member">wl_event_loop_add_fd</ref>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>,<sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref>,</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>,</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc683f52b30928c97361bde1de47fd3e" kindref="member">socket_data</ref>,<sp/>display);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(display-&gt;<ref refid="structwl__display_1ad8445133a3aec3add2022011d1c5e8b2" kindref="member">socket_list</ref>.<ref refid="structwl__list_1a72c2827d3103691f9e3299babfbf0704" kindref="member">prev</ref>,<sp/>&amp;s-&gt;<ref refid="structwl__socket_1af83312cad236ce24a5c9cfcb9eb05809" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><ref refid="wayland-server_8c_1af867e52066bc5fff5bb0c1d971735f8f" kindref="member">wl_display_add_socket_auto</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwl__socket_1a9eaeecac943dd82e21b1b3f758b9ed9c" kindref="member">display_name</ref>[16]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>reasonable<sp/>number<sp/>of<sp/>maximum<sp/>default<sp/>sockets.<sp/>If</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>need<sp/>more<sp/>than<sp/>this,<sp/>use<sp/>the<sp/>explicit<sp/>add_socket<sp/>API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_DISPLAYNO<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="wayland-server_8c_1a7740f08a433d77715d55dd09f1f248c9" kindref="member">wl_socket_alloc</ref>();</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(display_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>display_name,<sp/></highlight><highlight class="stringliteral">&quot;wayland-%d&quot;</highlight><highlight class="normal">,<sp/>displayno);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a545fda9306fd0870561dab4906b4682b" kindref="member">wl_socket_init_for_display_name</ref>(s,<sp/>display_name)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a85ce9bda5a5265785cb274d0bfd86932" kindref="member">wl_socket_lock</ref>(s)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a83bb0db9e4a3c64b5d551774c007f9d1" kindref="member">_wl_display_add_socket</ref>(display,<sp/>s)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structwl__socket_1a9eaeecac943dd82e21b1b3f758b9ed9c" kindref="member">display_name</ref>;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(displayno++<sp/>&lt;<sp/>MAX_DISPLAYNO);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ran<sp/>out<sp/>of<sp/>display<sp/>names.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><ref refid="wayland-server-core_8h_1a54f1cf58cc74cd44c889b2cdf029345d" kindref="member">wl_display_add_socket_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock_fd)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Require<sp/>a<sp/>valid<sp/>fd<sp/>or<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock_fd<sp/>&lt;<sp/>0<sp/>||<sp/>fstat(sock_fd,<sp/>&amp;buf)<sp/>&lt;<sp/>0<sp/>||<sp/>!S_ISSOCK(buf.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="wayland-server_8c_1a7740f08a433d77715d55dd09f1f248c9" kindref="member">wl_socket_alloc</ref>();</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref><sp/>=<sp/><ref refid="wayland-server-core_8h_1a677f7df496a70388151e56a88c46ad36" kindref="member">wl_event_loop_add_fd</ref>(display-&gt;<ref refid="structwl__display_1a09b21b500ff6935f6c134a662fc1651a" kindref="member">loop</ref>,<sp/>sock_fd,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1afc683f52b30928c97361bde1de47fd3e" kindref="member">socket_data</ref>,<sp/>display);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structwl__socket_1a17f6d70de4250ca21b6e6ed00fbdedc5" kindref="member">source</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>establish<sp/>event<sp/>source\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reuse<sp/>the<sp/>existing<sp/>fd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structwl__socket_1a84107d8f8948c572733d9dbcce799cd6" kindref="member">fd</ref><sp/>=<sp/>sock_fd;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(display-&gt;<ref refid="structwl__display_1ad8445133a3aec3add2022011d1c5e8b2" kindref="member">socket_list</ref>.<ref refid="structwl__list_1a72c2827d3103691f9e3299babfbf0704" kindref="member">prev</ref>,<sp/>&amp;s-&gt;<ref refid="structwl__socket_1af83312cad236ce24a5c9cfcb9eb05809" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><ref refid="wayland-server-core_8h_1a9fdf7264f0a3a28a75c141db252067b8" kindref="member">wl_display_add_socket</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__socket" kindref="compound">wl_socket</ref><sp/>*s;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="wayland-server_8c_1a7740f08a433d77715d55dd09f1f248c9" kindref="member">wl_socket_alloc</ref>();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WAYLAND_DISPLAY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wayland-0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a545fda9306fd0870561dab4906b4682b" kindref="member">wl_socket_init_for_display_name</ref>(s,<sp/>name)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a85ce9bda5a5265785cb274d0bfd86932" kindref="member">wl_socket_lock</ref>(s)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a83bb0db9e4a3c64b5d551774c007f9d1" kindref="member">_wl_display_add_socket</ref>(display,<sp/>s)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ad647365ee7e8a4497c583924bde929a3" kindref="member">wl_socket_destroy</ref>(s);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><ref refid="wayland-server_8c_1a9ea24547f07538f2a326c42c7793b937" kindref="member">wl_display_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_add(&amp;display-&gt;<ref refid="structwl__display_1abb413b6d494454c0fc5eb801b7009e4d" kindref="member">destroy_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><ref refid="wayland-server_8c_1a8c1cdf513c91fa498c4d9259eae3ed71" kindref="member">wl_display_add_client_created_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_add(&amp;display-&gt;<ref refid="structwl__display_1af4eb55355f6bba19c2c4d519fa9a770e" kindref="member">create_client_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="wayland-server_8c_1ad2e481a3157b1d182bb665a145230ae9" kindref="member">wl_display_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_priv_signal_get(&amp;display-&gt;<ref refid="structwl__display_1abb413b6d494454c0fc5eb801b7009e4d" kindref="member">destroy_signal</ref>,<sp/>notify);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a7478578f273f986624ecc26acfd4e6c2" kindref="member">implementation</ref><sp/>=<sp/>implementation;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref><sp/>=<sp/>destroy;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><ref refid="wayland-server_8c_1a6d127d9e4489ae795850a9b32d8c5637" kindref="member">wl_resource_set_dispatcher</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-util_8h_1abdec454d1dffed08d355d225e21ac8bd" kindref="member">wl_dispatcher_func_t</ref><sp/>dispatcher,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref><sp/>=<sp/>dispatcher;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a7478578f273f986624ecc26acfd4e6c2" kindref="member">implementation</ref><sp/>=<sp/>implementation;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref><sp/>=<sp/>destroy;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*resource);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>wl_map_insert_new(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1af663788be73eae7d567f044f8f9cbfb9" kindref="member">interface</ref><sp/>=<sp/>interface;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a7478578f273f986624ecc26acfd4e6c2" kindref="member">implementation</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;resource-&gt;<ref refid="structwl__resource_1a1182726dd855c862d13660e1de3c1334" kindref="member">deprecated_destroy_signal</ref>);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_init(&amp;resource-&gt;<ref refid="structwl__resource_1a7795d0d1661fc92c16d39d9949766f89" kindref="member">destroy_signal</ref>);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref><sp/>=<sp/><ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref><sp/>=<sp/><ref refid="structwl__resource_1a30ccbcc8013ea4122815da0789a36210" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_map_insert_at(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>0,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>new<sp/>id<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(resource);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_emit(&amp;client-&gt;<ref refid="structwl__client_1adf241e87b420a24141f11cafc589bd5c" kindref="member">resource_created_signal</ref>,<sp/>resource);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><ref refid="wayland-server_8c_1a0a0e1384dce2524161299fcd1669d59f" kindref="member">wl_log_set_handler_server</ref>(<ref refid="wayland-util_8h_1a8bbe3cc915acdaf00f7a183bf03d809c" kindref="member">wl_log_func_t</ref><sp/>handler)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log_handler<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><ref refid="wayland-server-core_8h_1ad50c4a699b66a468825fd14d09a9c864" kindref="member">wl_display_add_protocol_logger</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" kindref="member">wl_protocol_logger_func_t</ref><sp/><ref refid="structwl__protocol__logger_1aec3f6877750bee41e198ee0ba86ec74a" kindref="member">func</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__protocol__logger_1a6346ce5a1d65a1f6c8600da6cb1e0f88" kindref="member">user_data</ref>)</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*logger;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*logger);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logger)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="structwl__protocol__logger_1aec3f6877750bee41e198ee0ba86ec74a" kindref="member">func</ref><sp/>=<sp/><ref refid="structwl__protocol__logger_1aec3f6877750bee41e198ee0ba86ec74a" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="structwl__protocol__logger_1a6346ce5a1d65a1f6c8600da6cb1e0f88" kindref="member">user_data</ref><sp/>=<sp/><ref refid="structwl__protocol__logger_1a6346ce5a1d65a1f6c8600da6cb1e0f88" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;display-&gt;<ref refid="structwl__display_1a662a3081bed0349619bc7fe952fbb903" kindref="member">protocol_loggers</ref>,<sp/>&amp;logger-&gt;<ref refid="structwl__protocol__logger_1a728637455ccd2b69949f34304cb32b8f" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logger;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><ref refid="wayland-server-core_8h_1ac5bfbf098cbecb788190bc12e3becad7" kindref="member">wl_protocol_logger_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*logger)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;logger-&gt;<ref refid="structwl__protocol__logger_1a728637455ccd2b69949f34304cb32b8f" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(logger);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t<sp/>*</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><ref refid="wayland-server-core_8h_1a17e2cee84d163f938f8906b6f9a5089e" kindref="member">wl_display_add_shm_format</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/>uint32_t<sp/>format)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>wl_array_add(&amp;display-&gt;<ref refid="structwl__display_1a34b8b1a96ad8a692986c5c0889376cfa" kindref="member">additional_shm_formats</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__array" kindref="compound">wl_array</ref><sp/>*</highlight></codeline>
<codeline lineno="1813"><highlight class="normal">wl_display_get_additional_shm_formats(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;display-&gt;<ref refid="structwl__display_1a34b8b1a96ad8a692986c5c0889376cfa" kindref="member">additional_shm_formats</ref>;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><ref refid="wayland-server-core_8h_1aa3a43d9b00d83d21af1274e186d7cd1d" kindref="member">wl_display_get_client_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="1836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;display-&gt;<ref refid="structwl__display_1a4a646a3a3a91ed8797c3353c79a802c1" kindref="member">client_list</ref>;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><ref refid="wayland-server-core_8h_1a495543089904236f253c1f0095f942a1" kindref="member">wl_client_get_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client)</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;client-&gt;<ref refid="structwl__client_1a2f868addcc86bfb4de9d50d4b28c18e7" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><ref refid="wayland-server-core_8h_1aee7e1851a470ebe47651db71bf24682d" kindref="member">wl_client_from_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*link)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_of(link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref>,<sp/>link);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><ref refid="wayland-server-core_8h_1a62a52be27947e43ce7884a68759d1b4e" kindref="member">wl_client_add_resource_created_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_priv_signal_add(&amp;client-&gt;<ref refid="structwl__client_1adf241e87b420a24141f11cafc589bd5c" kindref="member">resource_created_signal</ref>,<sp/>listener);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889" refid="structwl__resource__iterator__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource__iterator__context" kindref="compound">wl_resource_iterator_context</ref><sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" kindref="member">wl_client_for_each_resource_iterator_func_t</ref><sp/>it;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><ref refid="wayland-server_8c_1a82b2c8234e539210317a2eeb440696e6" kindref="member">resource_iterator_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*res,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,<sp/>uint32_t<sp/>flags)</highlight></codeline>
<codeline lineno="1896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource__iterator__context" kindref="compound">wl_resource_iterator_context</ref><sp/>*context<sp/>=<sp/><ref refid="structwl__resource__iterator__context_1af5ac0180ba34e298106bde8cb060f6dd" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource<sp/>=<sp/>res;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structwl__resource__iterator__context_1aba992bce2ad676ddea0234e51d5ec79d" kindref="member">it</ref>(resource,<sp/>context-&gt;<ref refid="structwl__resource__iterator__context_1af5ac0180ba34e298106bde8cb060f6dd" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><ref refid="wayland-server-core_8h_1a4a0a6bb48f63ed80ab4575fda4c5d01a" kindref="member">wl_client_for_each_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" kindref="member">wl_client_for_each_resource_iterator_func_t</ref><sp/>iterator,</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource__iterator__context" kindref="compound">wl_resource_iterator_context</ref><sp/>context<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structwl__resource__iterator__context_1af5ac0180ba34e298106bde8cb060f6dd" kindref="member">user_data</ref><sp/>=<sp/><ref refid="structwl__resource__iterator__context_1af5ac0180ba34e298106bde8cb060f6dd" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.it<sp/>=<sp/>iterator,</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_for_each(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/><ref refid="wayland-server_8c_1a82b2c8234e539210317a2eeb440696e6" kindref="member">resource_iterator_helper</ref>,<sp/>&amp;context);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal">wl_priv_signal_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_priv_signal<sp/>*signal)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;signal-&gt;listener_list);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;signal-&gt;emit_list);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal">wl_priv_signal_add(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_priv_signal<sp/>*signal,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(signal-&gt;listener_list.prev,<sp/>&amp;listener-&gt;<ref refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="1981"><highlight class="normal">wl_priv_signal_get(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_priv_signal<sp/>*signal,<sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*l;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(l,<sp/>&amp;signal-&gt;listener_list,<sp/>link)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref><sp/>==<sp/>notify)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(l,<sp/>&amp;signal-&gt;emit_list,<sp/>link)</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref><sp/>==<sp/>notify)</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal">wl_priv_signal_emit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_priv_signal<sp/>*signal,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*l;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*pos;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1ac714f6eedd52286c8b6d9884cc7c8492" kindref="member">wl_list_insert_list</ref>(&amp;signal-&gt;emit_list,<sp/>&amp;signal-&gt;listener_list);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1a1d5c9d41e224538b2edf324c7f8b1ac8" kindref="member">wl_list_init</ref>(&amp;signal-&gt;listener_list);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>every<sp/>element<sp/>out<sp/>of<sp/>the<sp/>list<sp/>and<sp/>put<sp/>them<sp/>in<sp/>a<sp/>temporary<sp/>list.</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>way,<sp/>the<sp/>&apos;it&apos;<sp/>func<sp/>can<sp/>remove<sp/>any<sp/>element<sp/>it<sp/>wants<sp/>from<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>without<sp/>troubles,<sp/>because<sp/>we<sp/>always<sp/>get<sp/>the<sp/>first<sp/>element,<sp/>not<sp/>the</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>one<sp/>after<sp/>the<sp/>current,<sp/>which<sp/>may<sp/>be<sp/>invalid.</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wl_list_for_each_safe<sp/>tries<sp/>to<sp/>be<sp/>safe<sp/>but<sp/>it<sp/>fails:<sp/>it<sp/>works<sp/>fine</highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>current<sp/>item<sp/>is<sp/>removed,<sp/>but<sp/>not<sp/>if<sp/>the<sp/>next<sp/>one<sp/>is.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="structwl__list_1a5c6aa8f61fa63374f1c77e7e4462a38a" kindref="member">wl_list_empty</ref>(&amp;signal-&gt;emit_list))<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>signal-&gt;emit_list.<ref refid="structwl__list_1aa0454596900ed769fb2f033fbb96bf2c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="wayland-util_8h_1a09e3b64ee2195e1b80191aa1884d45aa" kindref="member">wl_container_of</ref>(pos,<sp/>l,<sp/>link);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1aa16d739aaa041dde9d34ad4bcb4d4c83" kindref="member">wl_list_remove</ref>(pos);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1aa7eaac0d363c0473bfc3e8172b0dfd98" kindref="member">wl_list_insert</ref>(&amp;signal-&gt;listener_list,<sp/>pos);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>(l,<sp/>data);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal">wl_priv_signal_final_emit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_priv_signal<sp/>*signal,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*l;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*pos;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>During<sp/>a<sp/>destructor<sp/>notifier<sp/>isolate<sp/>every<sp/>list<sp/>item<sp/>before</highlight></codeline>
<codeline lineno="2053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>notifying.<sp/><sp/>This<sp/>renders<sp/>harmless<sp/>the<sp/>long<sp/>standing<sp/>misuse</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>freeing<sp/>listeners<sp/>without<sp/>removing<sp/>them,<sp/>but<sp/>allows</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>callers<sp/>that<sp/>do<sp/>choose<sp/>to<sp/>remove<sp/>them<sp/>to<sp/>interoperate<sp/>with</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ones<sp/>that<sp/>don&apos;t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="structwl__list_1a5c6aa8f61fa63374f1c77e7e4462a38a" kindref="member">wl_list_empty</ref>(&amp;signal-&gt;listener_list))<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>signal-&gt;listener_list.<ref refid="structwl__list_1aa0454596900ed769fb2f033fbb96bf2c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="wayland-util_8h_1a09e3b64ee2195e1b80191aa1884d45aa" kindref="member">wl_container_of</ref>(pos,<sp/>l,<sp/>link);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1aa16d739aaa041dde9d34ad4bcb4d4c83" kindref="member">wl_list_remove</ref>(pos);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1a1d5c9d41e224538b2edf324c7f8b1ac8" kindref="member">wl_list_init</ref>(pos);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>(l,<sp/>data);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>functions<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><ref refid="wayland-server_8h_1a86592c8dfc359094d1cfd8e6abb47cb7" kindref="member">wl_client_add_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><ref refid="wayland-server_8h_1a86592c8dfc359094d1cfd8e6abb47cb7" kindref="member">wl_client_add_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref><sp/>=</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_map_insert_new(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_MAP_ENTRY_LEGACY,<sp/>resource);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wl_map_insert_at(&amp;client-&gt;<ref refid="structwl__client_1ad6f2be727c9dc10831a9ba39caf74c2b" kindref="member">objects</ref>,<sp/>WL_MAP_ENTRY_LEGACY,</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>,<sp/>resource)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(client-&gt;<ref refid="structwl__client_1a057a0af40eac725363090aeab0b8121c" kindref="member">display_resource</ref>,</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>new<sp/>id<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource-&gt;<ref refid="structwl__resource_1a6ceb1559a387f584ac68c5ccff744b70" kindref="member">client</ref><sp/>=<sp/>client;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;resource-&gt;<ref refid="structwl__resource_1a1182726dd855c862d13660e1de3c1334" kindref="member">deprecated_destroy_signal</ref>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource-&gt;<ref refid="structwl__resource_1af3184848b7668655f153d14d9b98f5d7" kindref="member">object</ref>.<ref refid="structwl__object_1a96193ebafbba8785e03ff9dd8e39d30c" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><ref refid="wayland-server_8h_1a8a87f8712025b4d92e5fe718ea9d745d" kindref="member">wl_client_add_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><ref refid="wayland-server_8h_1a8a87f8712025b4d92e5fe718ea9d745d" kindref="member">wl_client_add_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>interface,<sp/>-1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(resource,</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementation,<sp/>data,<sp/>NULL);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><ref refid="wayland-server_8h_1ab9570639a66efe77ae813c7edaf29c21" kindref="member">wl_client_new_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><ref refid="wayland-server_8h_1ab9570639a66efe77ae813c7edaf29c21" kindref="member">wl_client_new_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__resource_1a04550a669725ca66765ec5e1f04b98e5" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>interface,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(resource,</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementation,<sp/>data,<sp/>NULL);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><ref refid="wayland-server_8h_1a81dc2de5891114d1ae89449a048f3b6c" kindref="member">wl_display_add_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>,<sp/><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref><sp/><ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref>)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><ref refid="wayland-server_8h_1a81dc2de5891114d1ae89449a048f3b6c" kindref="member">wl_display_add_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>,<sp/><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref><sp/><ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref>)</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wayland-server_8c_1a85f5bc1c041738f5663835c5565ce0b8" kindref="member">wl_global_create</ref>(display,<sp/>interface,<sp/>interface-&gt;<ref refid="structwl__interface_1ac7b9bc6c0352b4100213109094ca55fa" kindref="member">version</ref>,<sp/><ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>,<sp/>bind);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><ref refid="wayland-server_8h_1ab9bbf24496934f296decd98ebf7940b9" kindref="member">wl_display_remove_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><ref refid="wayland-server_8h_1ab9bbf24496934f296decd98ebf7940b9" kindref="member">wl_display_remove_global</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1ab466d94d1f204fb5f07c57e5f558ab7a" kindref="member">wl_global_destroy</ref>(global);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="comment">/*<sp/>Functions<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>file<sp/>are<sp/>deprecated.<sp/><sp/>Instead<sp/>of<sp/>adding<sp/>new</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/>*<sp/>code<sp/>here,<sp/>add<sp/>it<sp/>before<sp/>the<sp/>comment<sp/>above<sp/>that<sp/>states:</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/>*<sp/>Deprecated<sp/>functions<sp/>below.</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/dev/shm/libwayland/wayland/src/wayland-server.c"/>
  </compounddef>
</doxygen>
