<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="event-loop_8c" kind="file" language="C++">
    <compoundname>event-loop.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/un.h</includes>
    <includes local="no">sys/epoll.h</includes>
    <includes local="no">sys/signalfd.h</includes>
    <includes local="no">sys/timerfd.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="wayland-util_8h" local="yes">wayland-util.h</includes>
    <includes local="yes">wayland-private.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="yes">/dev/shm/libwayland/wayland/src/wayland-server-core.h</includes>
    <includes local="yes">wayland-os.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="11">
        <label>sys/un.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="9">
        <label>fcntl.h</label>
      </node>
      <node id="1">
        <label>stddef.h</label>
      </node>
      <node id="22">
        <label>wayland-os.h</label>
      </node>
      <node id="21">
        <label>/dev/shm/libwayland/wayland/src/wayland-server-core.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="20">
        <label>wayland-private.h</label>
      </node>
      <node id="4">
        <label>signal.h</label>
      </node>
      <node id="14">
        <label>sys/timerfd.h</label>
      </node>
      <node id="13">
        <label>sys/signalfd.h</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>sys/socket.h</label>
      </node>
      <node id="16">
        <label>wayland-util.h</label>
        <link refid="wayland-util_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>sys/epoll.h</label>
      </node>
      <node id="18">
        <label>inttypes.h</label>
      </node>
      <node id="0">
        <label>/dev/shm/libwayland/wayland/src/event-loop.c</label>
        <link refid="event-loop_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="event-loop_8c_1adc0a5c96e8b62776564c8479ae547943" prot="public" static="no" mutable="no">
        <type>struct wl_event_source_interface</type>
        <definition>struct wl_event_source_interface fd_source_interface</definition>
        <argsstring></argsstring>
        <name>fd_source_interface</name>
        <initializer>= {
	<ref refid="event-loop_8c_1af3fef9e6c9da279d21090f8f2e943b7c" kindref="member">wl_event_source_fd_dispatch</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="79" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="event-loop_8c_1abc730cebd516a11c83231cab4a2aec0c" prot="public" static="no" mutable="no">
        <type>struct wl_event_source_interface</type>
        <definition>struct wl_event_source_interface timer_source_interface</definition>
        <argsstring></argsstring>
        <name>timer_source_interface</name>
        <initializer>= {
	<ref refid="event-loop_8c_1a02177df7ecd95992b38000dad2cd0b76" kindref="member">wl_event_source_timer_dispatch</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="223" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="event-loop_8c_1a6f80636b61f0932918ed17d9a62f8658" prot="public" static="no" mutable="no">
        <type>struct wl_event_source_interface</type>
        <definition>struct wl_event_source_interface signal_source_interface</definition>
        <argsstring></argsstring>
        <name>signal_source_interface</name>
        <initializer>= {
	<ref refid="event-loop_8c_1ad02309cfbe47921d98530f6bb2479cb4" kindref="member">wl_event_source_signal_dispatch</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="317" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="event-loop_8c_1a2712406e30c446d995910f005cdd0599" prot="public" static="no" mutable="no">
        <type>struct wl_event_source_interface</type>
        <definition>struct wl_event_source_interface idle_source_interface</definition>
        <argsstring></argsstring>
        <name>idle_source_interface</name>
        <initializer>= {
	NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="358" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="392" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="event-loop_8c_1af3fef9e6c9da279d21090f8f2e943b7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_event_source_fd_dispatch</definition>
        <argsstring>(struct wl_event_source *source, struct epoll_event *ep)</argsstring>
        <name>wl_event_source_fd_dispatch</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct epoll_event *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="79" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="79" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="event-loop_8c_1ab99820d16a4fcb8c41bcfa8b9862bcce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
        <definition>static struct wl_event_source* add_source</definition>
        <argsstring>(struct wl_event_loop *loop, struct wl_event_source *source, uint32_t mask, void *data)</argsstring>
        <name>add_source</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="103" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="103" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="event-loop_8c_1a02177df7ecd95992b38000dad2cd0b76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_event_source_timer_dispatch</definition>
        <argsstring>(struct wl_event_source *source, struct epoll_event *ep)</argsstring>
        <name>wl_event_source_timer_dispatch</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct epoll_event *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="223" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="223" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="event-loop_8c_1ad02309cfbe47921d98530f6bb2479cb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wl_event_source_signal_dispatch</definition>
        <argsstring>(struct wl_event_source *source, struct epoll_event *ep)</argsstring>
        <name>wl_event_source_signal_dispatch</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct epoll_event *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="317" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="317" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="event-loop_8c_1ac402d507c83dc4beef1a1c295ddf4e17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wl_event_loop_process_destroy_list</definition>
        <argsstring>(struct wl_event_loop *loop)</argsstring>
        <name>wl_event_loop_process_destroy_list</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="493" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="493" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="event-loop_8c_1a1808bd53877bffa153f58d64152003a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool post_dispatch_check</definition>
        <argsstring>(struct wl_event_loop *loop)</argsstring>
        <name>post_dispatch_check</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/event-loop.c" line="564" column="1" bodyfile="/dev/shm/libwayland/wayland/src/event-loop.c" bodystart="564" bodyend="583"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/un.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/epoll.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/signalfd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/timerfd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-util_8h" kindref="compound">wayland-util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-private.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-server-core_8h" kindref="compound">wayland-server-core.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epoll_fd;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>check_list;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>idle_list;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>destroy_list;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>destroy_signal;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*dispatch)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">epoll_event<sp/>*ep);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/>*interface;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>link;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_fd<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>base;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" kindref="member">wl_event_loop_fd_func_t</ref><sp/>func;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="event-loop_8c_1af3fef9e6c9da279d21090f8f2e943b7c" kindref="member">wl_event_source_fd_dispatch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>epoll_event<sp/>*ep)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_fd<sp/>*fd_source<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_fd<sp/>*)<sp/>source;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;events<sp/>&amp;<sp/>EPOLLIN)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;events<sp/>&amp;<sp/>EPOLLOUT)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" kindref="member">WL_EVENT_WRITABLE</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;events<sp/>&amp;<sp/>EPOLLHUP)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2852f50f50cceb1ca26af633531a4c28" kindref="member">WL_EVENT_HANGUP</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;events<sp/>&amp;<sp/>EPOLLERR)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8546a495f91fe38b980468fa44986e04" kindref="member">WL_EVENT_ERROR</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd_source-&gt;func(fd_source-&gt;fd,<sp/>mask,<sp/>source-&gt;data);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/><ref refid="event-loop_8c_1adc0a5c96e8b62776564c8479ae547943" kindref="member">fd_source_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event-loop_8c_1af3fef9e6c9da279d21090f8f2e943b7c" kindref="member">wl_event_source_fd_dispatch</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="event-loop_8c_1ab99820d16a4fcb8c41bcfa8b9862bcce" kindref="member">add_source</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">epoll_event<sp/>ep;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(source);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;loop<sp/>=<sp/>loop;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;data<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;source-&gt;link);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;ep,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>ep);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.events<sp/>|=<sp/>EPOLLIN;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" kindref="member">WL_EVENT_WRITABLE</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.events<sp/>|=<sp/>EPOLLOUT;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.data.ptr<sp/>=<sp/>source;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(epoll_ctl(loop-&gt;epoll_fd,<sp/>EPOLL_CTL_ADD,<sp/>source-&gt;fd,<sp/>&amp;ep)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(source-&gt;fd);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(source);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="wayland-server-core_8h_1a677f7df496a70388151e56a88c46ad36" kindref="member">wl_event_loop_add_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>mask,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" kindref="member">wl_event_loop_fd_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_fd<sp/>*source;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*source);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.interface<sp/>=<sp/>&amp;<ref refid="event-loop_8c_1adc0a5c96e8b62776564c8479ae547943" kindref="member">fd_source_interface</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.fd<sp/>=<sp/>wl_os_dupfd_cloexec(fd,<sp/>0);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;func<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="event-loop_8c_1ab99820d16a4fcb8c41bcfa8b9862bcce" kindref="member">add_source</ref>(loop,<sp/>&amp;source-&gt;base,<sp/>mask,<sp/>data);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="wayland-server-core_8h_1afe73f9ff59d489e9f27eb9c0e3058a02" kindref="member">wl_event_source_fd_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop<sp/>=<sp/>source-&gt;loop;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">epoll_event<sp/>ep;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;ep,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>ep);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/>WL_EVENT_READABLE)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.events<sp/>|=<sp/>EPOLLIN;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/>WL_EVENT_WRITABLE)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.events<sp/>|=<sp/>EPOLLOUT;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.data.ptr<sp/>=<sp/>source;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epoll_ctl(loop-&gt;epoll_fd,<sp/>EPOLL_CTL_MOD,<sp/>source-&gt;fd,<sp/>&amp;ep);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_timer<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>base;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" kindref="member">wl_event_loop_timer_func_t</ref><sp/>func;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="event-loop_8c_1a02177df7ecd95992b38000dad2cd0b76" kindref="member">wl_event_source_timer_dispatch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>epoll_event<sp/>*ep)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_timer<sp/>*timer_source<sp/>=</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_timer<sp/>*)<sp/>source;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>expires;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>read(source-&gt;fd,<sp/>&amp;expires,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>expires);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(len<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EAGAIN)<sp/>&amp;&amp;<sp/>len<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>expires)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>there<sp/>anything<sp/>we<sp/>can<sp/>do<sp/>here?<sp/><sp/>Will<sp/>this<sp/>ever<sp/>happen?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;timerfd<sp/>read<sp/>error:<sp/>%m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timer_source-&gt;func(timer_source-&gt;base.data);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/><ref refid="event-loop_8c_1abc730cebd516a11c83231cab4a2aec0c" kindref="member">timer_source_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event-loop_8c_1a02177df7ecd95992b38000dad2cd0b76" kindref="member">wl_event_source_timer_dispatch</ref>,</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="wayland-server-core_8h_1a2881e5ca8c07dea463fbd526b6506f7f" kindref="member">wl_event_loop_add_timer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" kindref="member">wl_event_loop_timer_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_timer<sp/>*source;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*source);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.interface<sp/>=<sp/>&amp;<ref refid="event-loop_8c_1abc730cebd516a11c83231cab4a2aec0c" kindref="member">timer_source_interface</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.fd<sp/>=<sp/>timerfd_create(CLOCK_MONOTONIC,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TFD_CLOEXEC<sp/>|<sp/>TFD_NONBLOCK);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;func<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="event-loop_8c_1ab99820d16a4fcb8c41bcfa8b9862bcce" kindref="member">add_source</ref>(loop,<sp/>&amp;source-&gt;base,<sp/>WL_EVENT_READABLE,<sp/>data);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="wayland-server-core_8h_1a0164a47e9e8356af90c9d5c1de9f5487" kindref="member">wl_event_source_timer_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms_delay)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">itimerspec<sp/>its;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its.it_interval.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its.it_interval.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its.it_value.tv_sec<sp/>=<sp/>ms_delay<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its.it_value.tv_nsec<sp/>=<sp/>(ms_delay<sp/>%<sp/>1000)<sp/>*<sp/>1000<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timerfd_settime(source-&gt;fd,<sp/>0,<sp/>&amp;its,<sp/>NULL)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_signal<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>base;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal_number;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" kindref="member">wl_event_loop_signal_func_t</ref><sp/>func;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="event-loop_8c_1ad02309cfbe47921d98530f6bb2479cb4" kindref="member">wl_event_source_signal_dispatch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>epoll_event<sp/>*ep)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_signal<sp/>*signal_source<sp/>=</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_signal<sp/>*)<sp/>source;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">signalfd_siginfo<sp/>signal_info;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>read(source-&gt;fd,<sp/>&amp;signal_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>signal_info);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(len<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EAGAIN)<sp/>&amp;&amp;<sp/>len<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>signal_info)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>there<sp/>anything<sp/>we<sp/>can<sp/>do<sp/>here?<sp/><sp/>Will<sp/>this<sp/>ever<sp/>happen?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;signalfd<sp/>read<sp/>error:<sp/>%m\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>signal_source-&gt;func(signal_source-&gt;signal_number,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_source-&gt;base.data);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/><ref refid="event-loop_8c_1a6f80636b61f0932918ed17d9a62f8658" kindref="member">signal_source_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event-loop_8c_1ad02309cfbe47921d98530f6bb2479cb4" kindref="member">wl_event_source_signal_dispatch</ref>,</highlight></codeline>
<codeline lineno="336"><highlight class="normal">};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="wayland-server-core_8h_1a0baa596851764fb5a91da83642777000" kindref="member">wl_event_loop_add_signal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal_number,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" kindref="member">wl_event_loop_signal_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_signal<sp/>*source;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigset_t<sp/>mask;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*source);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.interface<sp/>=<sp/>&amp;<ref refid="event-loop_8c_1a6f80636b61f0932918ed17d9a62f8658" kindref="member">signal_source_interface</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;signal_number<sp/>=<sp/>signal_number;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigemptyset(&amp;mask);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigaddset(&amp;mask,<sp/>signal_number);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.fd<sp/>=<sp/>signalfd(-1,<sp/>&amp;mask,<sp/>SFD_CLOEXEC<sp/>|<sp/>SFD_NONBLOCK);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigprocmask(SIG_BLOCK,<sp/>&amp;mask,<sp/>NULL);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;func<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="event-loop_8c_1ab99820d16a4fcb8c41bcfa8b9862bcce" kindref="member">add_source</ref>(loop,<sp/>&amp;source-&gt;base,<sp/>WL_EVENT_READABLE,<sp/>data);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_idle<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>base;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" kindref="member">wl_event_loop_idle_func_t</ref><sp/>func;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_interface<sp/><ref refid="event-loop_8c_1a2712406e30c446d995910f005cdd0599" kindref="member">idle_source_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="394"><highlight class="normal">};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="wayland-server-core_8h_1a2a1b5d6c1947954b0f74cfeb5f067b76" kindref="member">wl_event_loop_add_idle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" kindref="member">wl_event_loop_idle_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_idle<sp/>*source;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*source);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.interface<sp/>=<sp/>&amp;<ref refid="event-loop_8c_1a2712406e30c446d995910f005cdd0599" kindref="member">idle_source_interface</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.loop<sp/>=<sp/>loop;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;func<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;base.data<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(loop-&gt;idle_list.prev,<sp/>&amp;source-&gt;base.link);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;source-&gt;base;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="wayland-server-core_8h_1aa079264c57dd12168c691c000724efcf" kindref="member">wl_event_source_check</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(source-&gt;loop-&gt;check_list.prev,<sp/>&amp;source-&gt;link);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop<sp/>=<sp/>source-&gt;loop;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>explicitly<sp/>remove<sp/>the<sp/>fd,<sp/>since<sp/>closing<sp/>the<sp/>fd</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>isn&apos;t<sp/>enough<sp/>in<sp/>case<sp/>we&apos;ve<sp/>dup&apos;ed<sp/>the<sp/>fd.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epoll_ctl(loop-&gt;epoll_fd,<sp/>EPOLL_CTL_DEL,<sp/>source-&gt;fd,<sp/>NULL);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(source-&gt;fd);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_remove(&amp;source-&gt;link);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_insert(&amp;loop-&gt;destroy_list,<sp/>&amp;source-&gt;link);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="event-loop_8c_1ac402d507c83dc4beef1a1c295ddf4e17" kindref="member">wl_event_loop_process_destroy_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/>*next;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(source,<sp/>next,<sp/>&amp;loop-&gt;destroy_list,<sp/>link)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(source);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;loop-&gt;destroy_list);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="structwl__event__loop_1afb0958142b950045cd91011c71706979" kindref="member">wl_event_loop_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*loop);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loop<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop-&gt;epoll_fd<sp/>=<sp/>wl_os_epoll_create_cloexec();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loop-&gt;epoll_fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(loop);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;loop-&gt;check_list);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;loop-&gt;idle_list);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_init(&amp;loop-&gt;destroy_list);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_init(&amp;loop-&gt;destroy_signal);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loop;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><ref refid="structwl__event__loop_1ad50f13e2c738e68f7576757aa862513a" kindref="member">wl_event_loop_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_emit(&amp;loop-&gt;destroy_signal,<sp/>loop);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event-loop_8c_1ac402d507c83dc4beef1a1c295ddf4e17" kindref="member">wl_event_loop_process_destroy_list</ref>(loop);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(loop-&gt;epoll_fd);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(loop);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><ref refid="event-loop_8c_1a1808bd53877bffa153f58d64152003a7" kindref="member">post_dispatch_check</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">epoll_event<sp/>ep;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/>*next;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needs_recheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep.events<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(source,<sp/>next,<sp/>&amp;loop-&gt;check_list,<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dispatch_result;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_result<sp/>=<sp/>source-&gt;interface-&gt;dispatch(source,<sp/>&amp;ep);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dispatch_result<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;Source<sp/>dispatch<sp/>function<sp/>returned<sp/>negative<sp/>value!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;This<sp/>would<sp/>previously<sp/>accidentally<sp/>suppress<sp/>a<sp/>follow-up<sp/>dispatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs_recheck<sp/>|=<sp/>dispatch_result<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>needs_recheck;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><ref refid="structwl__event__loop_1aefc44b3062c22d2506ff42460f091396" kindref="member">wl_event_loop_dispatch_idle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_event_source_idle<sp/>*source;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!wl_list_empty(&amp;loop-&gt;idle_list))<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>container_of(loop-&gt;idle_list.next,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_event_source_idle,<sp/>base.link);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;func(source-&gt;base.data);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(&amp;source-&gt;base);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="structwl__event__loop_1aaa3fdd5590365a4a2106c9814ca9b31b" kindref="member">wl_event_loop_dispatch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">epoll_event<sp/>ep[32];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>count;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__loop_1aefc44b3062c22d2506ff42460f091396" kindref="member">wl_event_loop_dispatch_idle</ref>(loop);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>epoll_wait(loop-&gt;epoll_fd,<sp/>ep,<sp/>ARRAY_LENGTH(ep),<sp/>timeout);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>ep[i].data.ptr;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;fd<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;interface-&gt;dispatch(source,<sp/>&amp;ep[i]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event-loop_8c_1ac402d507c83dc4beef1a1c295ddf4e17" kindref="member">wl_event_loop_process_destroy_list</ref>(loop);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__loop_1aefc44b3062c22d2506ff42460f091396" kindref="member">wl_event_loop_dispatch_idle</ref>(loop);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="event-loop_8c_1a1808bd53877bffa153f58d64152003a7" kindref="member">post_dispatch_check</ref>(loop));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><ref refid="structwl__event__loop_1a58c8aa06a2d240a49a95a91eddcba8e5" kindref="member">wl_event_loop_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loop-&gt;epoll_fd;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><ref refid="structwl__event__loop_1a6b564d8d4183d71f1fdf06e751d84d51" kindref="member">wl_event_loop_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_signal_add(&amp;loop-&gt;destroy_signal,<sp/>listener);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="structwl__event__loop_1af282cb9f57fadd1fc0dd47ea68c3bae3" kindref="member">wl_event_loop_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wl_signal_get(&amp;loop-&gt;destroy_signal,<sp/>notify);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/dev/shm/libwayland/wayland/src/event-loop.c"/>
  </compounddef>
</doxygen>
