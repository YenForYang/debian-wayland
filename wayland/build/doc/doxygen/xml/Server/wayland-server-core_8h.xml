<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wayland-server-core_8h" kind="file" language="C++">
    <compoundname>wayland-server-core.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="wayland-util_8h" local="yes">wayland-util.h</includes>
    <includes local="yes">wayland-version.h</includes>
    <includedby refid="event-loop_8c" local="yes">/dev/shm/libwayland/wayland/src/event-loop.c</includedby>
    <includedby refid="wayland-server_8h" local="yes">/dev/shm/libwayland/wayland/src/wayland-server.h</includedby>
    <incdepgraph>
      <node id="27">
        <label>stdbool.h</label>
      </node>
      <node id="32">
        <label>stdarg.h</label>
      </node>
      <node id="26">
        <label>stdint.h</label>
      </node>
      <node id="30">
        <label>stddef.h</label>
      </node>
      <node id="24">
        <label>/dev/shm/libwayland/wayland/src/wayland-server-core.h</label>
        <link refid="wayland-server-core_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/types.h</label>
      </node>
      <node id="33">
        <label>wayland-version.h</label>
      </node>
      <node id="29">
        <label>math.h</label>
      </node>
      <node id="28">
        <label>wayland-util.h</label>
        <link refid="wayland-util_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37">
        <label>/dev/shm/libwayland/wayland/src/wayland-server.c</label>
        <link refid="wayland-server_8c"/>
      </node>
      <node id="36">
        <label>/dev/shm/libwayland/wayland/src/wayland-server.h</label>
        <link refid="wayland-server_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/dev/shm/libwayland/wayland/src/wayland-shm.c</label>
        <link refid="wayland-shm_8c"/>
      </node>
      <node id="34">
        <label>/dev/shm/libwayland/wayland/src/wayland-server-core.h</label>
        <link refid="wayland-server-core_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/dev/shm/libwayland/wayland/src/event-loop.c</label>
        <link refid="event-loop_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwl__listener" prot="public">wl_listener</innerclass>
    <innerclass refid="structwl__signal" prot="public">wl_signal</innerclass>
    <innerclass refid="structwl__protocol__logger__message" prot="public">wl_protocol_logger_message</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wayland-server-core_8h_1af1e9ad8dd32ea89265936930cd173ec5" prot="public" static="no">
        <name>wl_client_for_each</name>
        <param><defname>client</defname></param>
        <param><defname>list</defname></param>
        <initializer>for (client = <ref refid="structwl__client_1aec831218471327f37b4e1f11b571545d" kindref="member">wl_client_from_link</ref>((list)-&gt;next);	\
	     <ref refid="structwl__client_1ade7bddc335d60cb95f9d1bd4fb60d25b" kindref="member">wl_client_get_link</ref>(client) != (list);			\
	     client = <ref refid="structwl__client_1aec831218471327f37b4e1f11b571545d" kindref="member">wl_client_from_link</ref>(<ref refid="structwl__client_1ade7bddc335d60cb95f9d1bd4fb60d25b" kindref="member">wl_client_get_link</ref>(client)-&gt;next))</initializer>
        <briefdescription>
<para>Iterate over a list of clients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="295" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wayland-server-core_8h_1a333de7589325414cbbf082ee791f70a7" prot="public" static="no">
        <name>wl_resource_for_each</name>
        <param><defname>resource</defname></param>
        <param><defname>list</defname></param>
        <initializer>for (resource = 0, resource = <ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>((list)-&gt;next);	\
	     <ref refid="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(resource) != (list);				\
	     resource = <ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>(<ref refid="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(resource)-&gt;next))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="580" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wayland-server-core_8h_1a01a3804f30db7313c7467e4d5601d5fb" prot="public" static="no">
        <name>wl_resource_for_each_safe</name>
        <param><defname>resource</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>list</defname></param>
        <initializer>for (resource = 0, tmp = 0,							\
	     resource = <ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>((list)-&gt;next),	\
	     tmp = <ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>((list)-&gt;next-&gt;next);	\
	     <ref refid="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(resource) != (list);				\
	     resource = tmp,							\
	     tmp = <ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>(<ref refid="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(resource)-&gt;next))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="585" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" prot="public">
          <name>WL_EVENT_READABLE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" prot="public">
          <name>WL_EVENT_WRITABLE</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2852f50f50cceb1ca26af633531a4c28" prot="public">
          <name>WL_EVENT_HANGUP</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8546a495f91fe38b980468fa44986e04" prot="public">
          <name>WL_EVENT_ERROR</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="39" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41" prot="public" static="no">
        <name>wl_protocol_logger_type</name>
        <enumvalue id="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41af97aa1585e48a3e8ee7b7d1623b61836" prot="public">
          <name>WL_PROTOCOL_LOGGER_REQUEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41afc9b7270d748f502309f9fe2efaba053" prot="public">
          <name>WL_PROTOCOL_LOGGER_EVENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="637" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="637" bodyend="640"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wl_notify_func_t) (struct wl_listener *listener, void *data)</definition>
        <argsstring>)(struct wl_listener *listener, void *data)</argsstring>
        <name>wl_notify_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="180" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wl_global_bind_func_t) (struct wl_client *client, void *data, uint32_t version, uint32_t id)</definition>
        <argsstring>)(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>wl_global_bind_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="222" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* wl_display_global_filter_func_t) (const struct wl_client *client, const struct wl_global *global, void *data)</definition>
        <argsstring>)(const struct wl_client *client, const struct wl_global *global, void *data)</argsstring>
        <name>wl_display_global_filter_func_t</name>
        <briefdescription>
<para>A filter function for <ref refid="structwl__global" kindref="compound">wl_global</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The client object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>global</parametername>
</parameternamelist>
<parameterdescription>
<para>The global object to show or hide </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
A filter function enables the server to decide which globals to advertise to each client.</para><para>When a <ref refid="structwl__global" kindref="compound">wl_global</ref> filter is set, the given callback funtion will be called during <ref refid="structwl__global" kindref="compound">wl_global</ref> advertisment and binding.</para><para>This function should return true if the global object should be made visible to the client or false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="267" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" prot="public" static="no">
        <type>enum <ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref>(*</type>
        <definition>typedef enum wl_iterator_result(* wl_client_for_each_resource_iterator_func_t) (struct wl_resource *resource, void *user_data)</definition>
        <argsstring>)(struct wl_resource *resource, void *user_data)</argsstring>
        <name>wl_client_for_each_resource_iterator_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="328" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wl_resource_destroy_func_t) (struct wl_resource *resource)</definition>
        <argsstring>)(struct wl_resource *resource)</argsstring>
        <name>wl_resource_destroy_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="471" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wl_protocol_logger_func_t) (void *user_data, enum wl_protocol_logger_type direction, const struct wl_protocol_logger_message *message)</definition>
        <argsstring>)(void *user_data, enum wl_protocol_logger_type direction, const struct wl_protocol_logger_message *message)</argsstring>
        <name>wl_protocol_logger_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="650" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server-core.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wayland-server-core_8h_1adf933ad178be05536668da731acc6871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
        <definition>struct wl_event_loop* wl_event_loop_create</definition>
        <argsstring>(void)</argsstring>
        <name>wl_event_loop_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ad50f13e2c738e68f7576757aa862513a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_event_loop_destroy</definition>
        <argsstring>(struct wl_event_loop *loop)</argsstring>
        <name>wl_event_loop_destroy</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a677f7df496a70388151e56a88c46ad36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
        <definition>struct wl_event_source* wl_event_loop_add_fd</definition>
        <argsstring>(struct wl_event_loop *loop, int fd, uint32_t mask, wl_event_loop_fd_func_t func, void *data)</argsstring>
        <name>wl_event_loop_add_fd</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" kindref="member">wl_event_loop_fd_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1afe73f9ff59d489e9f27eb9c0e3058a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_event_source_fd_update</definition>
        <argsstring>(struct wl_event_source *source, uint32_t mask)</argsstring>
        <name>wl_event_source_fd_update</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a2881e5ca8c07dea463fbd526b6506f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
        <definition>struct wl_event_source* wl_event_loop_add_timer</definition>
        <argsstring>(struct wl_event_loop *loop, wl_event_loop_timer_func_t func, void *data)</argsstring>
        <name>wl_event_loop_add_timer</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" kindref="member">wl_event_loop_timer_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a0baa596851764fb5a91da83642777000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
        <definition>struct wl_event_source* wl_event_loop_add_signal</definition>
        <argsstring>(struct wl_event_loop *loop, int signal_number, wl_event_loop_signal_func_t func, void *data)</argsstring>
        <name>wl_event_loop_add_signal</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>signal_number</declname>
        </param>
        <param>
          <type><ref refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" kindref="member">wl_event_loop_signal_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a0164a47e9e8356af90c9d5c1de9f5487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_event_source_timer_update</definition>
        <argsstring>(struct wl_event_source *source, int ms_delay)</argsstring>
        <name>wl_event_source_timer_update</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ms_delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1afe37015d67b81ae82609f2b8aa78cc4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_event_source_remove</definition>
        <argsstring>(struct wl_event_source *source)</argsstring>
        <name>wl_event_source_remove</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aa079264c57dd12168c691c000724efcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_event_source_check</definition>
        <argsstring>(struct wl_event_source *source)</argsstring>
        <name>wl_event_source_check</name>
        <param>
          <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aaa3fdd5590365a4a2106c9814ca9b31b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_event_loop_dispatch</definition>
        <argsstring>(struct wl_event_loop *loop, int timeout)</argsstring>
        <name>wl_event_loop_dispatch</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aefc44b3062c22d2506ff42460f091396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_event_loop_dispatch_idle</definition>
        <argsstring>(struct wl_event_loop *loop)</argsstring>
        <name>wl_event_loop_dispatch_idle</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a2a1b5d6c1947954b0f74cfeb5f067b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__source" kindref="compound">wl_event_source</ref> *</type>
        <definition>struct wl_event_source* wl_event_loop_add_idle</definition>
        <argsstring>(struct wl_event_loop *loop, wl_event_loop_idle_func_t func, void *data)</argsstring>
        <name>wl_event_loop_add_idle</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" kindref="member">wl_event_loop_idle_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a58c8aa06a2d240a49a95a91eddcba8e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_event_loop_get_fd</definition>
        <argsstring>(struct wl_event_loop *loop)</argsstring>
        <name>wl_event_loop_get_fd</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6b564d8d4183d71f1fdf06e751d84d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_event_loop_add_destroy_listener</definition>
        <argsstring>(struct wl_event_loop *loop, struct wl_listener *listener)</argsstring>
        <name>wl_event_loop_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a2b199278145924742fd2672755d6f8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_event_loop_get_destroy_listener</definition>
        <argsstring>(struct wl_event_loop *loop, wl_notify_func_t notify)</argsstring>
        <name>wl_event_loop_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a496bcdc506013f5fd47641777deb9618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
        <definition>struct wl_display* wl_display_create</definition>
        <argsstring>(void)</argsstring>
        <name>wl_display_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1acd9ad2e1ca3ffb0ba0f1b77ae616f8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_destroy</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_destroy</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1afe7a4b1d6fbf166a66f686c830e2946c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref> *</type>
        <definition>struct wl_event_loop* wl_display_get_event_loop</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_get_event_loop</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="197" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1242" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a9fdf7264f0a3a28a75c141db252067b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_display_add_socket</definition>
        <argsstring>(struct wl_display *display, const char *name)</argsstring>
        <name>wl_display_add_socket</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1af867e52066bc5fff5bb0c1d971735f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wl_display_add_socket_auto</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_add_socket_auto</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="203" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1458" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a54f1cf58cc74cd44c889b2cdf029345d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_display_add_socket_fd</definition>
        <argsstring>(struct wl_display *display, int sock_fd)</argsstring>
        <name>wl_display_add_socket_fd</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sock_fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a40e3041d2432d3941b3e8eb96c5284dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_terminate</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_terminate</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="209" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1248" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a999da1b9acb5808a3bbad60aaed8a7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_run</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_run</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="212" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1254" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aeb502f6fdde16d9ee08f31aed040355f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_flush_clients</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_flush_clients</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="215" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1265" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ab50365739904f91579a66f4b054a3ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_destroy_clients</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_destroy_clients</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a43f04f76ea1457edcf37c95de68b29ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_display_get_serial</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_get_serial</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a145f7d3e4b41fc9014c11bf01bd7eb4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_display_next_serial</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_next_serial</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a9ea24547f07538f2a326c42c7793b937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_add_destroy_listener</definition>
        <argsstring>(struct wl_display *display, struct wl_listener *listener)</argsstring>
        <name>wl_display_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="232" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1597" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a8c1cdf513c91fa498c4d9259eae3ed71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_add_client_created_listener</definition>
        <argsstring>(struct wl_display *display, struct wl_listener *listener)</argsstring>
        <name>wl_display_add_client_created_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Registers a listener for the client connection signal. </para>        </briefdescription>
        <detaileddescription>
<para>When a new client object is created, <emphasis>listener</emphasis> will be notified, carrying a pointer to the new <ref refid="structwl__client" kindref="compound">wl_client</ref> object.</para><para><ref refid="structwl__display_1aa2436b6a0b56cd65d8f6e33b76cd292c" kindref="member">wl_client_create</ref> <ref refid="structwl__display" kindref="compound">wl_display</ref> <ref refid="structwl__listener" kindref="compound">wl_listener</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>display</parametername>
</parameternamelist>
<parameterdescription>
<para>The display object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal handler object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="236" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1615" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ad2e481a3157b1d182bb665a145230ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_display_get_destroy_listener</definition>
        <argsstring>(struct wl_display *display, wl_notify_func_t notify)</argsstring>
        <name>wl_display_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="240" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1622" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a85f5bc1c041738f5663835c5565ce0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
        <definition>struct wl_global* wl_global_create</definition>
        <argsstring>(struct wl_display *display, const struct wl_interface *interface, int version, void *data, wl_global_bind_func_t bind)</argsstring>
        <name>wl_global_create</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref></type>
          <declname>bind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="244" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1141" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ab466d94d1f204fb5f07c57e5f558ab7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_global_destroy</definition>
        <argsstring>(struct wl_global *global)</argsstring>
        <name>wl_global_destroy</name>
        <param>
          <type>struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="250" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1185" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a3905b9734d8bb84f2c851bb4abbc52f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_display_set_global_filter</definition>
        <argsstring>(struct wl_display *display, wl_display_global_filter_func_t filter, void *data)</argsstring>
        <name>wl_display_set_global_filter</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" kindref="member">wl_display_global_filter_func_t</ref></type>
          <declname>filter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a82c2f11ffbb50bdb57e07e275b2362e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
        <definition>const struct wl_interface* wl_global_get_interface</definition>
        <argsstring>(const struct wl_global *global)</argsstring>
        <name>wl_global_get_interface</name>
        <param>
          <type>const struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="277" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1198" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ac8aa5d6a692cd28378c051b6a35c41da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wl_global_get_user_data</definition>
        <argsstring>(const struct wl_global *global)</argsstring>
        <name>wl_global_get_user_data</name>
        <param>
          <type>const struct <ref refid="structwl__global" kindref="compound">wl_global</ref> *</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="280" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1204" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1afb954d2c512f4d0140e25cd331c2cd9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
        <definition>struct wl_client* wl_client_create</definition>
        <argsstring>(struct wl_display *display, int fd)</argsstring>
        <name>wl_client_create</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aa3a43d9b00d83d21af1274e186d7cd1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
        <definition>struct wl_list* wl_display_get_client_list</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_get_client_list</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a495543089904236f253c1f0095f942a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
        <definition>struct wl_list* wl_client_get_link</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_get_link</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aee7e1851a470ebe47651db71bf24682d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
        <definition>struct wl_client* wl_client_from_link</definition>
        <argsstring>(struct wl_list *link)</argsstring>
        <name>wl_client_from_link</name>
        <param>
          <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a661c0b1a9deef909c5d43f5efe4cb524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_destroy</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_destroy</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="301" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="840" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6a045ad15d6ca216c4da41ba67c9ef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_flush</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_flush</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a82a97cb3a66c1c56826a09a7b42453d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_get_credentials</definition>
        <argsstring>(struct wl_client *client, pid_t *pid, uid_t *uid, gid_t *gid)</argsstring>
        <name>wl_client_get_credentials</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>pid_t *</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>uid_t *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>gid_t *</type>
          <declname>gid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ad5a94921b39efad0985632e865479ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_client_get_fd</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_get_fd</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a9062fe6277721ec5b4b7d3cec9e34981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_add_destroy_listener</definition>
        <argsstring>(struct wl_client *client, struct wl_listener *listener)</argsstring>
        <name>wl_client_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="314" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="826" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6f20471027c1fe02e79af96426ef5bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_client_get_destroy_listener</definition>
        <argsstring>(struct wl_client *client, wl_notify_func_t notify)</argsstring>
        <name>wl_client_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="318" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="833" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aa589ab039ac7e67a9da5ccdada9fcb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_client_get_object</definition>
        <argsstring>(struct wl_client *client, uint32_t id)</argsstring>
        <name>wl_client_get_object</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a12352da895372907cf30449435d8ee5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_post_no_memory</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_post_no_memory</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="325" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="638" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a62a52be27947e43ce7884a68759d1b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_add_resource_created_listener</definition>
        <argsstring>(struct wl_client *client, struct wl_listener *listener)</argsstring>
        <name>wl_client_add_resource_created_listener</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a4a0a6bb48f63ed80ab4575fda4c5d01a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_client_for_each_resource</definition>
        <argsstring>(struct wl_client *client, wl_client_for_each_resource_iterator_func_t iterator, void *user_data)</argsstring>
        <name>wl_client_for_each_resource</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" kindref="member">wl_client_for_each_resource_iterator_func_t</ref></type>
          <declname>iterator</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a67150e8e41fed1358dfd59d46fcda23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_event</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode,...)</argsstring>
        <name>wl_resource_post_event</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="490" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="239" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a97deed922e68853cb3785947926d56a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_event_array</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args)</argsstring>
        <name>wl_resource_post_event_array</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="494" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a67891685eff3a9ebd5371d78ca83d516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_queue_event</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode,...)</argsstring>
        <name>wl_resource_queue_event</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="498" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="262" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a9b63bd8423712f6edebfd6dae9e48225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_queue_event_array</definition>
        <argsstring>(struct wl_resource *resource, uint32_t opcode, union wl_argument *args)</argsstring>
        <name>wl_resource_queue_event_array</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>union <ref refid="unionwl__argument" kindref="compound">wl_argument</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="502" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a75428b89fa7e6aa97027bb74b348c386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_error</definition>
        <argsstring>(struct wl_resource *resource, uint32_t code, const char *msg,...)</argsstring>
        <name>wl_resource_post_error</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="507" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="277" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aefff369c8182adc3c29ea561e23b9fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_post_no_memory</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_post_no_memory</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="511" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="645" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a1a69200af1f06ccbcd218b2328f3c885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
        <definition>struct wl_display* wl_client_get_display</definition>
        <argsstring>(struct wl_client *client)</argsstring>
        <name>wl_client_get_display</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_resource_create</definition>
        <argsstring>(struct wl_client *client, const struct wl_interface *interface, int version, uint32_t id)</argsstring>
        <name>wl_resource_create</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a9ac84b9077dcf2020f2b847189d4ebc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_implementation</definition>
        <argsstring>(struct wl_resource *resource, const void *implementation, void *data, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_implementation</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="522" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1629" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6d127d9e4489ae795850a9b32d8c5637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_dispatcher</definition>
        <argsstring>(struct wl_resource *resource, wl_dispatcher_func_t dispatcher, const void *implementation, void *data, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_dispatcher</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-util_8h_1abdec454d1dffed08d355d225e21ac8bd" kindref="member">wl_dispatcher_func_t</ref></type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="528" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1640" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a4fd83132742252516c9a3df7f4eaa4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_destroy</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_destroy</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="535" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="697" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ae265d2902bc8e0994b26a3f43e63448c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_resource_get_id</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_id</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="538" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="719" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
        <definition>struct wl_list* wl_resource_get_link</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_link</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="541" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_resource_from_link</definition>
        <argsstring>(struct wl_list *resource)</argsstring>
        <name>wl_resource_from_link</name>
        <param>
          <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="544" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="731" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a4ac3fbd1d228f441c6846f3ebccc9c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
        <definition>struct wl_resource* wl_resource_find_for_client</definition>
        <argsstring>(struct wl_list *list, struct wl_client *client)</argsstring>
        <name>wl_resource_find_for_client</name>
        <param>
          <type>struct <ref refid="structwl__list" kindref="compound">wl_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="547" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="739" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a300147832089811f11d345fbc3f47fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
        <definition>struct wl_client* wl_resource_get_client</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_client</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="550" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="755" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aa9b40199dbf513b6a25263872b8490c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_user_data</definition>
        <argsstring>(struct wl_resource *resource, void *data)</argsstring>
        <name>wl_resource_set_user_data</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="553" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="761" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a07f2328aa269ff1968afc4836018204f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wl_resource_get_user_data</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_user_data</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="556" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="767" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a8f0f7d0b0f0fb9f44ccd3694b3dd58d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_resource_get_version</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_version</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="559" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="773" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ab69024ab2f0f502aa70cf18bb2761882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_set_destructor</definition>
        <argsstring>(struct wl_resource *resource, wl_resource_destroy_func_t destroy)</argsstring>
        <name>wl_resource_set_destructor</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="562" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="779" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a8849a58c3ba7a528c643591369125844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_resource_instance_of</definition>
        <argsstring>(struct wl_resource *resource, const struct wl_interface *interface, const void *implementation)</argsstring>
        <name>wl_resource_instance_of</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwl__interface" kindref="compound">wl_interface</ref> *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>implementation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="566" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="786" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ae570127d26c63db09db82afa3a8cda2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wl_resource_get_class</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_resource_get_class</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a6eac87009589e0bdc52830833ca46694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_resource_add_destroy_listener</definition>
        <argsstring>(struct wl_resource *resource, struct wl_listener *listener)</argsstring>
        <name>wl_resource_add_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="573" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="795" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a46364ef94b5671f41f4cb9587070b23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__listener" kindref="compound">wl_listener</ref> *</type>
        <definition>struct wl_listener* wl_resource_get_destroy_listener</definition>
        <argsstring>(struct wl_resource *resource, wl_notify_func_t notify)</argsstring>
        <name>wl_resource_get_destroy_listener</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref></type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="577" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="805" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a55964fd7a5774ed9f94bfadce6f8a8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
        <definition>struct wl_shm_buffer* wl_shm_buffer_get</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_shm_buffer_get</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="594" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="349" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a809cb5d6b33338c62bbca6daa4138667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_shm_buffer_begin_access</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_begin_access</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a030db6056ef08836e9dee21a8087e2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_shm_buffer_end_access</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_end_access</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1adeb4b01f2ecca2cbd9002d6d64f16ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wl_shm_buffer_get_data</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_data</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ad132f92b616451c67aeb6a25cc60f282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_stride</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_stride</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="606" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1af27bd34e94cc995f25a08a0beadd8bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_shm_buffer_get_format</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_format</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="609" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ada7167ed92985de64ff9116b09a07708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_width</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_width</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="612" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1acd6812b7699de5a1b80eb4bf1c78aa0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_height</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_height</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="615" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ae4dc5539543e07f3c9b9b69f0566d53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref> *</type>
        <definition>struct wl_shm_pool* wl_shm_buffer_ref_pool</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_ref_pool</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a2349156a6b7940645a4754e6c1690051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_shm_pool_unref</definition>
        <argsstring>(struct wl_shm_pool *pool)</argsstring>
        <name>wl_shm_pool_unref</name>
        <param>
          <type>struct <ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1aef08c24892f8fa98431e0610ee487ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_display_init_shm</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_init_shm</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="624" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a17e2cee84d163f938f8906b6f9a5089e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t *</type>
        <definition>uint32_t* wl_display_add_shm_format</definition>
        <argsstring>(struct wl_display *display, uint32_t format)</argsstring>
        <name>wl_display_add_shm_format</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a2c1c1d3e116c9491e1e66525e74a85bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
        <definition>struct wl_shm_buffer* wl_shm_buffer_create</definition>
        <argsstring>(struct wl_client *client, uint32_t id, int32_t width, int32_t height, int32_t stride, uint32_t format) WL_DEPRECATED</argsstring>
        <name>wl_shm_buffer_create</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1a0a0e1384dce2524161299fcd1669d59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_log_set_handler_server</definition>
        <argsstring>(wl_log_func_t handler)</argsstring>
        <name>wl_log_set_handler_server</name>
        <param>
          <type><ref refid="wayland-util_8h_1a8bbe3cc915acdaf00f7a183bf03d809c" kindref="member">wl_log_func_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="635" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-server.c" bodystart="1703" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ad50c4a699b66a468825fd14d09a9c864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref> *</type>
        <definition>struct wl_protocol_logger* wl_display_add_protocol_logger</definition>
        <argsstring>(struct wl_display *display, wl_protocol_logger_func_t, void *user_data)</argsstring>
        <name>wl_display_add_protocol_logger</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" kindref="member">wl_protocol_logger_func_t</ref></type>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wayland-server-core_8h_1ac5bfbf098cbecb788190bc12e3becad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wl_protocol_logger_destroy</definition>
        <argsstring>(struct wl_protocol_logger *logger)</argsstring>
        <name>wl_protocol_logger_destroy</name>
        <param>
          <type>struct <ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h" line="659" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WAYLAND_SERVER_CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WAYLAND_SERVER_CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-util_8h" kindref="compound">wayland-util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40" refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2f8da2f542c24d84452fe16fa4e13f73" kindref="member">WL_EVENT_READABLE</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="41" refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55baabde5476e8497581547c9f4cec474ff4" kindref="member">WL_EVENT_WRITABLE</ref><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="42" refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2852f50f50cceb1ca26af633531a4c28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba2852f50f50cceb1ca26af633531a4c28" kindref="member">WL_EVENT_HANGUP</ref><sp/><sp/><sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="43" refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8546a495f91fe38b980468fa44986e04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8546a495f91fe38b980468fa44986e04" kindref="member">WL_EVENT_ERROR</ref><sp/><sp/><sp/><sp/>=<sp/>0x08</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" kindref="member">wl_event_loop_fd_func_t</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" kindref="member">wl_event_loop_timer_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" kindref="member">wl_event_loop_signal_func_t</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal_number,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" kindref="member">wl_event_loop_idle_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structwl__event__loop_1afb0958142b950045cd91011c71706979" kindref="member">wl_event_loop_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="structwl__event__loop_1ad50f13e2c738e68f7576757aa862513a" kindref="member">wl_event_loop_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="structwl__event__source_1a0e7ce1f52dfe04c73b6a7c2263c7ef25" kindref="member">wl_event_loop_add_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint32_t<sp/>mask,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a09e702384ed869548c72f3576399c581" kindref="member">wl_event_loop_fd_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="structwl__event__source_1afe73f9ff59d489e9f27eb9c0e3058a02" kindref="member">wl_event_source_fd_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="structwl__event__source_1a39374f19a73472f63fab4267a14adc10" kindref="member">wl_event_loop_add_timer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a59bc490bf28b48e0af908ab91649938a" kindref="member">wl_event_loop_timer_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="structwl__event__source_1a1706e2490502a95f24ccb59cbae3e2f8" kindref="member">wl_event_loop_add_signal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal_number,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1a431b418976144a8ebe6b19bc24206d20" kindref="member">wl_event_loop_signal_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="structwl__event__source_1a0164a47e9e8356af90c9d5c1de9f5487" kindref="member">wl_event_source_timer_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms_delay);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="structwl__event__source_1afe37015d67b81ae82609f2b8aa78cc4f" kindref="member">wl_event_source_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="structwl__event__source_1aa079264c57dd12168c691c000724efcf" kindref="member">wl_event_source_check</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*source);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="structwl__event__loop_1aaa3fdd5590365a4a2106c9814ca9b31b" kindref="member">wl_event_loop_dispatch</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="structwl__event__loop_1aefc44b3062c22d2506ff42460f091396" kindref="member">wl_event_loop_dispatch_idle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__source" kindref="compound">wl_event_source</ref><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="structwl__event__source_1a90d88ae62b26a25f709977c45b300716" kindref="member">wl_event_loop_add_idle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__event__source_1ae526dfa099f9ba69285e275c82794a9b" kindref="member">wl_event_loop_idle_func_t</ref><sp/>func,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="structwl__event__loop_1a58c8aa06a2d240a49a95a91eddcba8e5" kindref="member">wl_event_loop_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="structwl__event__loop_1a6b564d8d4183d71f1fdf06e751d84d51" kindref="member">wl_event_loop_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="structwl__event__loop_1af282cb9f57fadd1fc0dd47ea68c3bae3" kindref="member">wl_event_loop_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*loop,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="structwl__display_1ac3dd9a1294b2b6103228a55e08709e9f" kindref="member">wl_display_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="structwl__display_1acd9ad2e1ca3ffb0ba0f1b77ae616f8ee" kindref="member">wl_display_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__event__loop" kindref="compound">wl_event_loop</ref><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="wayland-server-core_8h_1afe7a4b1d6fbf166a66f686c830e2946c" kindref="member">wl_display_get_event_loop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="structwl__display_1a9fdf7264f0a3a28a75c141db252067b8" kindref="member">wl_display_add_socket</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="wayland-server-core_8h_1af867e52066bc5fff5bb0c1d971735f8f" kindref="member">wl_display_add_socket_auto</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="structwl__display_1a54f1cf58cc74cd44c889b2cdf029345d" kindref="member">wl_display_add_socket_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock_fd);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="wayland-server-core_8h_1a40e3041d2432d3941b3e8eb96c5284dc" kindref="member">wl_display_terminate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="wayland-server-core_8h_1a999da1b9acb5808a3bbad60aaed8a7ff" kindref="member">wl_display_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="wayland-server-core_8h_1aeb502f6fdde16d9ee08f31aed040355f" kindref="member">wl_display_flush_clients</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="structwl__display_1ab50365739904f91579a66f4b054a3ecb" kindref="member">wl_display_destroy_clients</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/>id);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="structwl__display_1a43f04f76ea1457edcf37c95de68b29ef" kindref="member">wl_display_get_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="structwl__display_1a145f7d3e4b41fc9014c11bf01bd7eb4f" kindref="member">wl_display_next_serial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="wayland-server-core_8h_1a9ea24547f07538f2a326c42c7793b937" kindref="member">wl_display_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="wayland-server-core_8h_1a8c1cdf513c91fa498c4d9259eae3ed71" kindref="member">wl_display_add_client_created_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="wayland-server-core_8h_1ad2e481a3157b1d182bb665a145230ae9" kindref="member">wl_display_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="wayland-server-core_8h_1a85f5bc1c041738f5663835c5565ce0b8" kindref="member">wl_global_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__global_1a3ac41deda1861eebace2336684054527" kindref="member">display</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*<ref refid="structwl__global_1ae1d0a630338a47aab0af3c3a00a31459" kindref="member">interface</ref>,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="wayland-server-core_8h_1aa43e45303203c14431e00fedaa3ec156" kindref="member">wl_global_bind_func_t</ref><sp/><ref refid="structwl__global_1acc985dddfc0a75b454187c062c054e67" kindref="member">bind</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><ref refid="wayland-server-core_8h_1ab466d94d1f204fb5f07c57e5f558ab7a" kindref="member">wl_global_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" kindref="member">wl_display_global_filter_func_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__global_1a72c4c64c0f0ddf348caa18d8824c50af" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="structwl__display_1a3905b9734d8bb84f2c851bb4abbc52f8" kindref="member">wl_display_set_global_filter</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__global_1a3ac41deda1861eebace2336684054527" kindref="member">display</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a869353bf26daf40e7317cd00473f8dcd" kindref="member">wl_display_global_filter_func_t</ref><sp/>filter,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="wayland-server-core_8h_1a82c2f11ffbb50bdb57e07e275b2362e6" kindref="member">wl_global_get_interface</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><ref refid="wayland-server-core_8h_1ac8aa5d6a692cd28378c051b6a35c41da" kindref="member">wl_global_get_user_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__global" kindref="compound">wl_global</ref><sp/>*global);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="structwl__display_1aa2436b6a0b56cd65d8f6e33b76cd292c" kindref="member">wl_client_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*<ref refid="structwl__client_1a1d22bc3d96a9c06bdaabce8cfad616ba" kindref="member">display</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="structwl__display_1a99b9c187d88633fa5ba86d1424f06d7f" kindref="member">wl_display_get_client_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="structwl__client_1ade7bddc335d60cb95f9d1bd4fb60d25b" kindref="member">wl_client_get_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="structwl__client_1aec831218471327f37b4e1f11b571545d" kindref="member">wl_client_from_link</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*<ref refid="structwl__client_1a2f868addcc86bfb4de9d50d4b28c18e7" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="wayland-server-core_8h_1af1e9ad8dd32ea89265936930cd173ec5" refkind="member"><highlight class="preprocessor">#define<sp/>wl_client_for_each(client,<sp/>list)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(client<sp/>=<sp/>wl_client_from_link((list)-&gt;next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_client_get_link(client)<sp/>!=<sp/>(list);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>wl_client_from_link(wl_client_get_link(client)-&gt;next))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="wayland-server-core_8h_1a661c0b1a9deef909c5d43f5efe4cb524" kindref="member">wl_client_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="structwl__client_1a6a045ad15d6ca216c4da41ba67c9ef4a" kindref="member">wl_client_flush</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="structwl__client_1a82a97cb3a66c1c56826a09a7b42453d9" kindref="member">wl_client_get_credentials</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>*pid,<sp/>uid_t<sp/>*uid,<sp/>gid_t<sp/>*gid);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="structwl__client_1ad5a94921b39efad0985632e865479ca2" kindref="member">wl_client_get_fd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="wayland-server-core_8h_1a9062fe6277721ec5b4b7d3cec9e34981" kindref="member">wl_client_add_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="wayland-server-core_8h_1a6f20471027c1fe02e79af96426ef5bf4" kindref="member">wl_client_get_destroy_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="structwl__client_1ab9d04dffa9409db43154230c64bc1f84" kindref="member">wl_client_get_object</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><ref refid="wayland-server-core_8h_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="structwl__client_1a62a52be27947e43ce7884a68759d1b4e" kindref="member">wl_client_add_resource_created_listener</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wayland-util_8h_1adb093d005a4b7e04111b7e385349cf23" kindref="member">wl_iterator_result</ref><sp/>(*<ref refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" kindref="member">wl_client_for_each_resource_iterator_func_t</ref>)(</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="structwl__client_1a4a0a6bb48f63ed80ab4575fda4c5d01a" kindref="member">wl_client_for_each_resource</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a3dfebf4109ca3ff4d66d28019a2c2602" kindref="member">wl_client_for_each_resource_iterator_func_t</ref><sp/>iterator,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="structwl__listener" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>{</highlight></codeline>
<codeline lineno="388" refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/><ref refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="389" refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structwl__signal" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>{</highlight></codeline>
<codeline lineno="406" refid="structwl__signal_1a756bd56198fb87698f165e6c9464e75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>listener_list;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="structwl__signal_1aeb25ddd9c813189203d15723e983b320" refkind="member"><highlight class="normal"><ref refid="structwl__signal_1aeb25ddd9c813189203d15723e983b320" kindref="member">wl_signal_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>*signal)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1a1d5c9d41e224538b2edf324c7f8b1ac8" kindref="member">wl_list_init</ref>(&amp;signal-&gt;<ref refid="structwl__signal_1a756bd56198fb87698f165e6c9464e75c" kindref="member">listener_list</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="structwl__signal_1aa8bcd3b8e250cfe35ed064d5af589096" refkind="member"><highlight class="normal"><ref refid="structwl__signal_1aa8bcd3b8e250cfe35ed064d5af589096" kindref="member">wl_signal_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>*signal,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__list_1aa7eaac0d363c0473bfc3e8172b0dfd98" kindref="member">wl_list_insert</ref>(signal-&gt;<ref refid="structwl__signal_1a756bd56198fb87698f165e6c9464e75c" kindref="member">listener_list</ref>.<ref refid="structwl__list_1a72c2827d3103691f9e3299babfbf0704" kindref="member">prev</ref>,<sp/>&amp;listener-&gt;<ref refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="444" refid="structwl__signal_1ab0ade7ac929136ad457cc1e0f34f9e10" refkind="member"><highlight class="normal"><ref refid="structwl__signal_1ab0ade7ac929136ad457cc1e0f34f9e10" kindref="member">wl_signal_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>*signal,<sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*l;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each(l,<sp/>&amp;signal-&gt;<ref refid="structwl__signal_1a756bd56198fb87698f165e6c9464e75c" kindref="member">listener_list</ref>,<sp/><ref refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref><sp/>==<sp/>notify)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="structwl__signal_1afe73f44f7f1b517c9c0ba90829c93309" refkind="member"><highlight class="normal"><ref refid="structwl__signal_1afe73f44f7f1b517c9c0ba90829c93309" kindref="member">wl_signal_emit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__signal" kindref="compound">wl_signal</ref><sp/>*signal,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*l,<sp/>*next;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_list_for_each_safe(l,<sp/>next,<sp/>&amp;signal-&gt;<ref refid="structwl__signal_1a756bd56198fb87698f165e6c9464e75c" kindref="member">listener_list</ref>,<sp/><ref refid="structwl__listener_1aa6f65339ec407b0caeb98bebdc3b628f" kindref="member">link</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>(l,<sp/>data);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>Post<sp/>an<sp/>event<sp/>to<sp/>the<sp/>client&apos;s<sp/>object<sp/>referred<sp/>to<sp/>by<sp/>&apos;resource&apos;.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>&apos;opcode&apos;<sp/>is<sp/>the<sp/>event<sp/>number<sp/>generated<sp/>from<sp/>the<sp/>protocol<sp/>XML</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>description<sp/>(the<sp/>event<sp/>name).<sp/>The<sp/>variable<sp/>arguments<sp/>are<sp/>the<sp/>event</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>parameters,<sp/>in<sp/>the<sp/>order<sp/>they<sp/>appear<sp/>in<sp/>the<sp/>protocol<sp/>XML<sp/>specification.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>The<sp/>variable<sp/>arguments&apos;<sp/>types<sp/>are:</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>-<sp/>type=uint:<sp/>uint32_t</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>-<sp/>type=int:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>-<sp/>type=fixed:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_t</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>-<sp/>type=string:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>char<sp/>*)<sp/>to<sp/>a<sp/>nil-terminated<sp/>string</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/>-<sp/>type=array:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(struct<sp/>wl_array<sp/>*)</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>-<sp/>type=fd:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int,<sp/>that<sp/>is<sp/>an<sp/>open<sp/>file<sp/>descriptor</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>-<sp/>type=new_id:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(struct<sp/>wl_object<sp/>*)<sp/>or<sp/>(struct<sp/>wl_resource<sp/>*)</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>-<sp/>type=object:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(struct<sp/>wl_object<sp/>*)<sp/>or<sp/>(struct<sp/>wl_resource<sp/>*)</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="wayland-server-core_8h_1a67150e8e41fed1358dfd59d46fcda23b" kindref="member">wl_resource_post_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>opcode,<sp/>...);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><ref refid="wayland-server-core_8h_1a97deed922e68853cb3785947926d56a7" kindref="member">wl_resource_post_event_array</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>opcode,<sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><ref refid="wayland-server-core_8h_1a67891685eff3a9ebd5371d78ca83d516" kindref="member">wl_resource_queue_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>opcode,<sp/>...);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="wayland-server-core_8h_1a9b63bd8423712f6edebfd6dae9e48225" kindref="member">wl_resource_queue_event_array</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>opcode,<sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*args);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>msg<sp/>is<sp/>a<sp/>printf<sp/>format<sp/>string,<sp/>variable<sp/>args<sp/>are<sp/>its<sp/>args.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="wayland-server-core_8h_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)<sp/><ref refid="wayland-util_8h_1aa7cbf0ab788d6898c97f322630577424" kindref="member">WL_PRINTF</ref>(3,<sp/>4);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="wayland-server-core_8h_1aefff369c8182adc3c29ea561e23b9fd8" kindref="member">wl_resource_post_no_memory</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">struct<sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><ref refid="wayland-server-core_8h_1a1a69200af1f06ccbcd218b2328f3c885" kindref="member">wl_client_get_display</ref>(struct<sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(struct<sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>struct<sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="wayland-server-core_8h_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/><ref refid="structwl__resource_1a4b023c453cd12005cefd10ee7fa46925" kindref="member">destroy</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><ref refid="wayland-server-core_8h_1a6d127d9e4489ae795850a9b32d8c5637" kindref="member">wl_resource_set_dispatcher</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-util_8h_1abdec454d1dffed08d355d225e21ac8bd" kindref="member">wl_dispatcher_func_t</ref><sp/><ref refid="structwl__resource_1a4740b0eb5b24cc61caed50f8c5ba334f" kindref="member">dispatcher</ref>,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><ref refid="wayland-server-core_8h_1a4fd83132742252516c9a3df7f4eaa4d7" kindref="member">wl_resource_destroy</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><ref refid="wayland-server-core_8h_1ae265d2902bc8e0994b26a3f43e63448c" kindref="member">wl_resource_get_id</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">struct<sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="wayland-server-core_8h_1ab1de3c23a75ddb99ff8c29c0e759a39b" kindref="member">wl_resource_get_link</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><ref refid="wayland-server-core_8h_1a6ed2f937f570b36e7842c5a0bd3d754b" kindref="member">wl_resource_from_link</ref>(struct<sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><ref refid="wayland-server-core_8h_1a4ac3fbd1d228f441c6846f3ebccc9c6e" kindref="member">wl_resource_find_for_client</ref>(struct<sp/><ref refid="structwl__list" kindref="compound">wl_list</ref><sp/>*list,<sp/>struct<sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">struct<sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="wayland-server-core_8h_1a300147832089811f11d345fbc3f47fe6" kindref="member">wl_resource_get_client</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="wayland-server-core_8h_1aa9b40199dbf513b6a25263872b8490c6" kindref="member">wl_resource_set_user_data</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="wayland-server-core_8h_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="wayland-server-core_8h_1a8f0f7d0b0f0fb9f44ccd3694b3dd58d5" kindref="member">wl_resource_get_version</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="wayland-server-core_8h_1ab69024ab2f0f502aa70cf18bb2761882" kindref="member">wl_resource_set_destructor</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1aa3d1d24261bd732fc15dfb354aec17f1" kindref="member">wl_resource_destroy_func_t</ref><sp/>destroy);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="wayland-server-core_8h_1a8849a58c3ba7a528c643591369125844" kindref="member">wl_resource_instance_of</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>struct<sp/><ref refid="structwl__interface" kindref="compound">wl_interface</ref><sp/>*interface,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*implementation);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><ref refid="wayland-server-core_8h_1ae570127d26c63db09db82afa3a8cda2d" kindref="member">wl_resource_get_class</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="wayland-server-core_8h_1a6eac87009589e0bdc52830833ca46694" kindref="member">wl_resource_add_destroy_listener</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*listener);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">struct<sp/><ref refid="structwl__listener" kindref="compound">wl_listener</ref><sp/>*</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><ref refid="wayland-server-core_8h_1a46364ef94b5671f41f4cb9587070b23f" kindref="member">wl_resource_get_destroy_listener</ref>(struct<sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a1db9aad922e07db2a6ad50d151d49a50" kindref="member">wl_notify_func_t</ref><sp/><ref refid="structwl__listener_1a8c0294987041c6d06a483370664d9cca" kindref="member">notify</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="wayland-server-core_8h_1a333de7589325414cbbf082ee791f70a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wl_resource_for_each(resource,<sp/>list)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(resource<sp/>=<sp/>0,<sp/>resource<sp/>=<sp/>wl_resource_from_link((list)-&gt;next);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(resource)<sp/>!=<sp/>(list);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_from_link(wl_resource_get_link(resource)-&gt;next))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="wayland-server-core_8h_1a01a3804f30db7313c7467e4d5601d5fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wl_resource_for_each_safe(resource,<sp/>tmp,<sp/>list)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(resource<sp/>=<sp/>0,<sp/>tmp<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>wl_resource_from_link((list)-&gt;next),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>wl_resource_from_link((list)-&gt;next-&gt;next);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_get_link(resource)<sp/>!=<sp/>(list);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>tmp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>wl_resource_from_link(wl_resource_get_link(resource)-&gt;next))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="wayland-server-core_8h_1a55964fd7a5774ed9f94bfadce6f8a8ce" kindref="member">wl_shm_buffer_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><ref refid="wayland-server-core_8h_1a809cb5d6b33338c62bbca6daa4138667" kindref="member">wl_shm_buffer_begin_access</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><ref refid="wayland-server-core_8h_1a030db6056ef08836e9dee21a8087e2c1" kindref="member">wl_shm_buffer_end_access</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><ref refid="wayland-server-core_8h_1adeb4b01f2ecca2cbd9002d6d64f16ac4" kindref="member">wl_shm_buffer_get_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">int32_t</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><ref refid="wayland-server-core_8h_1ad132f92b616451c67aeb6a25cc60f282" kindref="member">wl_shm_buffer_get_stride</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><ref refid="wayland-server-core_8h_1af27bd34e94cc995f25a08a0beadd8bc9" kindref="member">wl_shm_buffer_get_format</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">int32_t</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="wayland-server-core_8h_1ada7167ed92985de64ff9116b09a07708" kindref="member">wl_shm_buffer_get_width</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">int32_t</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="wayland-server-core_8h_1acd6812b7699de5a1b80eb4bf1c78aa0e" kindref="member">wl_shm_buffer_get_height</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="wayland-server-core_8h_1ae4dc5539543e07f3c9b9b69f0566d53f" kindref="member">wl_shm_buffer_ref_pool</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><ref refid="wayland-server-core_8h_1a2349156a6b7940645a4754e6c1690051" kindref="member">wl_shm_pool_unref</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="wayland-server-core_8h_1aef08c24892f8fa98431e0610ee487ef7" kindref="member">wl_display_init_shm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">uint32_t<sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="wayland-server-core_8h_1a17e2cee84d163f938f8906b6f9a5089e" kindref="member">wl_display_add_shm_format</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,<sp/>uint32_t<sp/>format);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><ref refid="wayland-server-core_8h_1a2c1c1d3e116c9491e1e66525e74a85bb" kindref="member">wl_shm_buffer_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref>,<sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref>,<sp/>uint32_t<sp/><ref refid="structwl__shm__buffer_1ab62701b55dde79ce9beb612d40712570" kindref="member">format</ref>)<sp/><ref refid="wayland-util_8h_1a9ef5a521a018de9c5b28a5ef9909cd33" kindref="member">WL_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><ref refid="wayland-server-core_8h_1a0a0e1384dce2524161299fcd1669d59f" kindref="member">wl_log_set_handler_server</ref>(<ref refid="wayland-util_8h_1a8bbe3cc915acdaf00f7a183bf03d809c" kindref="member">wl_log_func_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41" kindref="member">wl_protocol_logger_type</ref><sp/>{</highlight></codeline>
<codeline lineno="638" refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41af97aa1585e48a3e8ee7b7d1623b61836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41af97aa1585e48a3e8ee7b7d1623b61836" kindref="member">WL_PROTOCOL_LOGGER_REQUEST</ref>,</highlight></codeline>
<codeline lineno="639" refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41afc9b7270d748f502309f9fe2efaba053" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41afc9b7270d748f502309f9fe2efaba053" kindref="member">WL_PROTOCOL_LOGGER_EVENT</ref>,</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="structwl__protocol__logger__message" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger__message" kindref="compound">wl_protocol_logger_message</ref><sp/>{</highlight></codeline>
<codeline lineno="643" refid="structwl__protocol__logger__message_1ac76d15d9c58adf12cb6f2586ee3bea2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*<ref refid="structwl__protocol__logger__message_1ac76d15d9c58adf12cb6f2586ee3bea2f" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="644" refid="structwl__protocol__logger__message_1a762bfff4501343e2e9806443ac02dbc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__protocol__logger__message_1a762bfff4501343e2e9806443ac02dbc9" kindref="member">message_opcode</ref>;</highlight></codeline>
<codeline lineno="645" refid="structwl__protocol__logger__message_1a9bc84a1e7f16d30577a4c16d923452e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__message" kindref="compound">wl_message</ref><sp/>*<ref refid="structwl__protocol__logger__message_1a9bc84a1e7f16d30577a4c16d923452e5" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="646" refid="structwl__protocol__logger__message_1ac30826cbe546d43b07d3fc78ae9a173d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__protocol__logger__message_1ac30826cbe546d43b07d3fc78ae9a173d" kindref="member">arguments_count</ref>;</highlight></codeline>
<codeline lineno="647" refid="structwl__protocol__logger__message_1a483319aeeebbf4f549122f7e52779c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionwl__argument" kindref="compound">wl_argument</ref><sp/>*<ref refid="structwl__protocol__logger__message_1a483319aeeebbf4f549122f7e52779c12" kindref="member">arguments</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" kindref="member">wl_protocol_logger_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wayland-server-core_8h_1af48a3fbdc3644d40debc707adeabce41" kindref="member">wl_protocol_logger_type</ref><sp/>direction,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger__message" kindref="compound">wl_protocol_logger_message</ref><sp/>*<ref refid="structwl__protocol__logger__message_1a9bc84a1e7f16d30577a4c16d923452e5" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="wayland-server-core_8h_1ad50c4a699b66a468825fd14d09a9c864" kindref="member">wl_display_add_protocol_logger</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a420c37c10e960e6fb0968e2c30628006" kindref="member">wl_protocol_logger_func_t</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><ref refid="wayland-server-core_8h_1ac5bfbf098cbecb788190bc12e3becad7" kindref="member">wl_protocol_logger_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__protocol__logger" kindref="compound">wl_protocol_logger</ref><sp/>*logger);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/dev/shm/libwayland/wayland/src/wayland-server-core.h"/>
  </compounddef>
</doxygen>
