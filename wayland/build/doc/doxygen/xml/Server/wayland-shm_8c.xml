<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wayland-shm_8c" kind="file" language="C++">
    <compoundname>wayland-shm.c</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">pthread.h</includes>
    <includes refid="wayland-util_8h" local="yes">wayland-util.h</includes>
    <includes local="yes">wayland-private.h</includes>
    <includes refid="wayland-server_8h" local="yes">wayland-server.h</includes>
    <incdepgraph>
      <node id="84">
        <label>stdbool.h</label>
      </node>
      <node id="98">
        <label>stdarg.h</label>
      </node>
      <node id="100">
        <label>wayland-server.h</label>
        <link refid="wayland-server_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>assert.h</label>
      </node>
      <node id="87">
        <label>stdint.h</label>
      </node>
      <node id="89">
        <label>sys/mman.h</label>
      </node>
      <node id="86">
        <label>stdlib.h</label>
      </node>
      <node id="83">
        <label>/dev/shm/libwayland/wayland/src/wayland-shm.c</label>
        <link refid="wayland-shm_8c"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>stddef.h</label>
      </node>
      <node id="101">
        <label>wayland-server-core.h</label>
        <link refid="wayland-server-core_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>pthread.h</label>
      </node>
      <node id="102">
        <label>sys/types.h</label>
      </node>
      <node id="88">
        <label>string.h</label>
      </node>
      <node id="104">
        <label>wayland-server-protocol.h</label>
      </node>
      <node id="90">
        <label>unistd.h</label>
      </node>
      <node id="103">
        <label>wayland-version.h</label>
      </node>
      <node id="99">
        <label>wayland-private.h</label>
      </node>
      <node id="92">
        <label>signal.h</label>
      </node>
      <node id="95">
        <label>math.h</label>
      </node>
      <node id="94">
        <label>wayland-util.h</label>
        <link refid="wayland-util_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>stdio.h</label>
      </node>
      <node id="97">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwl__shm__pool" prot="public">wl_shm_pool</innerclass>
    <innerclass refid="structwl__shm__buffer" prot="public">wl_shm_buffer</innerclass>
    <innerclass refid="structwl__shm__sigbus__data" prot="public">wl_shm_sigbus_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wayland-shm_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="31" column="9" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wayland-shm_8c_1a8deee1da0bc514eda625a166ee33c706" prot="public" static="yes" mutable="no">
        <type>pthread_once_t</type>
        <definition>pthread_once_t wl_shm_sigbus_once</definition>
        <argsstring></argsstring>
        <name>wl_shm_sigbus_once</name>
        <initializer>= PTHREAD_ONCE_INIT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="51" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" prot="public" static="yes" mutable="no">
        <type>pthread_key_t</type>
        <definition>pthread_key_t wl_shm_sigbus_data_key</definition>
        <argsstring></argsstring>
        <name>wl_shm_sigbus_data_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="52" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-shm_8c_1a8932f36cd3828e6ed6ec367ea1281bcc" prot="public" static="yes" mutable="no">
        <type>struct sigaction</type>
        <definition>struct sigaction wl_shm_old_sigbus_action</definition>
        <argsstring></argsstring>
        <name>wl_shm_old_sigbus_action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="52" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-shm_8c_1a5d283afb8f0d50a0d8f2db1a7247dc91" prot="public" static="yes" mutable="no">
        <type>const struct wl_buffer_interface</type>
        <definition>const struct wl_buffer_interface shm_buffer_interface</definition>
        <argsstring></argsstring>
        <name>shm_buffer_interface</name>
        <initializer>= {
	<ref refid="wayland-shm_8c_1a56a4e9f0b2c94a29e0033b350838c127" kindref="member">shm_buffer_destroy</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="128" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-shm_8c_1af442d59e141a3d0d952b73fc7199cdda" prot="public" static="yes" mutable="no">
        <type>const struct wl_shm_pool_interface</type>
        <definition>const struct wl_shm_pool_interface shm_pool_interface</definition>
        <argsstring></argsstring>
        <name>shm_pool_interface</name>
        <initializer>= {
	<ref refid="wayland-shm_8c_1a8eb1534df499c1423af637ddabea675c" kindref="member">shm_pool_create_buffer</ref>,
	<ref refid="wayland-shm_8c_1a1207e2fdb17d9ab776c4e80e90ad39be" kindref="member">shm_pool_destroy</ref>,
	<ref refid="wayland-shm_8c_1a0b9fe6a955018a8ba7e84b383cad1adb" kindref="member">shm_pool_resize</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="227" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="wayland-shm_8c_1a1f9c98808b7e1fd8ce02d7ba079c485d" prot="public" static="yes" mutable="no">
        <type>const struct wl_shm_interface</type>
        <definition>const struct wl_shm_interface shm_interface</definition>
        <argsstring></argsstring>
        <name>shm_interface</name>
        <initializer>= {
	<ref refid="wayland-shm_8c_1a8106a92f58c526409a386a5bc913b4e4" kindref="member">shm_create_pool</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="257" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="310" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wayland-shm_8c_1a702ee5a57c636c9310f2b75d144051d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_pool_finish_resize</definition>
        <argsstring>(struct wl_shm_pool *pool)</argsstring>
        <name>shm_pool_finish_resize</name>
        <param>
          <type>struct <ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="80" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="80" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_pool_unref</definition>
        <argsstring>(struct wl_shm_pool *pool, bool external)</argsstring>
        <name>shm_pool_unref</name>
        <param>
          <type>struct <ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref> *</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>external</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="100" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="100" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a7231b52c0ce2a7b81ef6de09bdb6b16e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_buffer</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_buffer</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="118" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a56a4e9f0b2c94a29e0033b350838c127" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_buffer_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>shm_buffer_destroy</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="128" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a57bb7efd1bf178739decdb48591b9f79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool format_is_supported</definition>
        <argsstring>(struct wl_client *client, uint32_t format)</argsstring>
        <name>format_is_supported</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="138" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="138" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a8eb1534df499c1423af637ddabea675c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_pool_create_buffer</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, int32_t offset, int32_t width, int32_t height, int32_t stride, uint32_t format)</argsstring>
        <name>shm_pool_create_buffer</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="159" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="159" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a487ba3577d701baee7f40d651bafc2c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_pool</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>destroy_pool</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="213" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a1207e2fdb17d9ab776c4e80e90ad39be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_pool_destroy</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource)</argsstring>
        <name>shm_pool_destroy</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="221" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a0b9fe6a955018a8ba7e84b383cad1adb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_pool_resize</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, int32_t size)</argsstring>
        <name>shm_pool_resize</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="227" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="227" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a8106a92f58c526409a386a5bc913b4e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void shm_create_pool</definition>
        <argsstring>(struct wl_client *client, struct wl_resource *resource, uint32_t id, int fd, int32_t size)</argsstring>
        <name>shm_create_pool</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="257" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="257" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a233891736e7af8c89af406d21aeeb930" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bind_shm</definition>
        <argsstring>(struct wl_client *client, void *data, uint32_t version, uint32_t id)</argsstring>
        <name>bind_shm</name>
        <param>
          <type>struct <ref refid="structwl__client" kindref="compound">wl_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="315" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="315" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1aef08c24892f8fa98431e0610ee487ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wl_display_init_shm</definition>
        <argsstring>(struct wl_display *display)</argsstring>
        <name>wl_display_init_shm</name>
        <param>
          <type>struct <ref refid="structwl__display" kindref="compound">wl_display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="340" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a55964fd7a5774ed9f94bfadce6f8a8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
        <definition>struct wl_shm_buffer* wl_shm_buffer_get</definition>
        <argsstring>(struct wl_resource *resource)</argsstring>
        <name>wl_shm_buffer_get</name>
        <param>
          <type>struct <ref refid="structwl__resource" kindref="compound">wl_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="349" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="349" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1ad132f92b616451c67aeb6a25cc60f282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_stride</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_stride</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="362" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1af27bd34e94cc995f25a08a0beadd8bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t wl_shm_buffer_get_format</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_format</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="401" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1ada7167ed92985de64ff9116b09a07708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_width</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_width</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="407" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1acd6812b7699de5a1b80eb4bf1c78aa0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t wl_shm_buffer_get_height</definition>
        <argsstring>(struct wl_shm_buffer *buffer)</argsstring>
        <name>wl_shm_buffer_get_height</name>
        <param>
          <type>struct <ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="413" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a4e19e7e2d179139ddb6545300b4770c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reraise_sigbus</definition>
        <argsstring>(void)</argsstring>
        <name>reraise_sigbus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="462" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="462" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a190aab5b8dc3bf8095feee45f30f88aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sigbus_handler</definition>
        <argsstring>(int signum, siginfo_t *info, void *context)</argsstring>
        <name>sigbus_handler</name>
        <param>
          <type>int</type>
          <declname>signum</declname>
        </param>
        <param>
          <type>siginfo_t *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="472" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="472" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1aa19bb87954d9ecde011a7d82f414fc7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_sigbus_data</definition>
        <argsstring>(void *data)</argsstring>
        <name>destroy_sigbus_data</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="508" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="508" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="wayland-shm_8c_1a34c4446bdaf2452ef114613a06427766" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_sigbus_data_key</definition>
        <argsstring>(void)</argsstring>
        <name>init_sigbus_data_key</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c" line="516" column="1" bodyfile="/dev/shm/libwayland/wayland/src/wayland-shm.c" bodystart="516" bodyend="528"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2008<sp/>Kristian<sp/>Høgsberg</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>(including<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>next<sp/>paragraph)<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Authors:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@bitplanet.net&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Benjamin<sp/>Franzke<sp/>&lt;benjaminfranzke@googlemail.com&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-util_8h" kindref="compound">wayland-util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wayland-private.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland-server_8h" kindref="compound">wayland-server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>once_t<sp/>is<sp/>used<sp/>to<sp/>synchronize<sp/>installing<sp/>the<sp/>SIGBUS<sp/>handler</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>and<sp/>creating<sp/>the<sp/>TLS<sp/>key.<sp/>This<sp/>will<sp/>be<sp/>done<sp/>in<sp/>the<sp/>first<sp/>call</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>wl_shm_buffer_begin_access<sp/>which<sp/>can<sp/>happen<sp/>from<sp/>any<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_once_t<sp/><ref refid="wayland-shm_8c_1a8deee1da0bc514eda625a166ee33c706" kindref="member">wl_shm_sigbus_once</ref><sp/>=<sp/>PTHREAD_ONCE_INIT;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_key_t<sp/><ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/><ref refid="wayland-shm_8c_1a8932f36cd3828e6ed6ec367ea1281bcc" kindref="member">wl_shm_old_sigbus_action</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structwl__shm__pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structwl__shm__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>stride;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>format;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structwl__shm__sigbus__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__sigbus__data" kindref="compound">wl_shm_sigbus_data</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*current_pool;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>access_count;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fallback_mapping_used;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="wayland-shm_8c_1a702ee5a57c636c9310f2b75d144051d8" kindref="member">shm_pool_finish_resize</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref><sp/>==<sp/>pool-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>mremap(pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>,<sp/>pool-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref>,<sp/>MREMAP_MAYMOVE);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(pool-&gt;<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_FD,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>mremap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>=<sp/><ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref><sp/>=<sp/>pool-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" kindref="member">shm_pool_unref</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>external)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(external)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref>--;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a702ee5a57c636c9310f2b75d144051d8" kindref="member">shm_pool_finish_resize</ref>(pool);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref>--;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool-&gt;<ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref><sp/>+<sp/>pool-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>munmap(pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pool);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="wayland-shm_8c_1a7231b52c0ce2a7b81ef6de09bdb6b16e" kindref="member">destroy_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer<sp/>=<sp/><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(resource);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" kindref="member">shm_pool_unref</ref>(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="wayland-shm_8c_1a56a4e9f0b2c94a29e0033b350838c127" kindref="member">shm_buffer_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a4fd83132742252516c9a3df7f4eaa4d7" kindref="member">wl_resource_destroy</ref>(resource);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_buffer_interface<sp/><ref refid="wayland-shm_8c_1a5d283afb8f0d50a0d8f2db1a7247dc91" kindref="member">shm_buffer_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a56a4e9f0b2c94a29e0033b350838c127" kindref="member">shm_buffer_destroy</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="wayland-shm_8c_1a57bb7efd1bf178739decdb48591b9f79" kindref="member">format_is_supported</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/>uint32_t<sp/>format)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/><ref refid="wayland-server-core_8h_1a1a69200af1f06ccbcd218b2328f3c885" kindref="member">wl_client_get_display</ref>(client);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__array" kindref="compound">wl_array</ref><sp/>*formats;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*p;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(format)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_SHM_FORMAT_ARGB8888:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WL_SHM_FORMAT_XRGB8888:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formats<sp/>=<sp/>wl_display_get_additional_shm_formats(display);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__array_1ab050f7375dcae916506142763080ed80" kindref="member">wl_array_for_each</ref>(p,<sp/>formats)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/>format)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="wayland-shm_8c_1a8eb1534df499c1423af637ddabea675c" kindref="member">shm_pool_create_buffer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int32_t<sp/>offset,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>stride,<sp/>uint32_t<sp/>format)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool<sp/>=<sp/><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(resource);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-shm_8c_1a57bb7efd1bf178739decdb48591b9f79" kindref="member">format_is_supported</ref>(client,<sp/>format))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_FORMAT,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>format<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>format);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwl__shm__buffer_1a9c942587694f130e247d705ec793d3d7" kindref="member">offset</ref><sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref><sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref><sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref><sp/>&lt;<sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref><sp/>||</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INT32_MAX<sp/>/<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref><sp/>&lt;=<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref><sp/>||</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__shm__buffer_1a9c942587694f130e247d705ec793d3d7" kindref="member">offset</ref><sp/>&gt;<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref><sp/>-<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref><sp/>*<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_STRIDE,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>width,<sp/>height<sp/>or<sp/>stride<sp/>(%dx%d,<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref>,<sp/>height,<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1ab62701b55dde79ce9beb612d40712570" kindref="member">format</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1ab62701b55dde79ce9beb612d40712570" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a9c942587694f130e247d705ec793d3d7" kindref="member">offset</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1a9c942587694f130e247d705ec793d3d7" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref><sp/>=<sp/><ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref>++;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a3d12a4cd03248384cc49f1967344f046" kindref="member">resource</ref><sp/>=</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_buffer_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structwl__shm__buffer_1a3d12a4cd03248384cc49f1967344f046" kindref="member">resource</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" kindref="member">shm_pool_unref</ref>(pool,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(buffer-&gt;<ref refid="structwl__shm__buffer_1a3d12a4cd03248384cc49f1967344f046" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="wayland-shm_8c_1a5d283afb8f0d50a0d8f2db1a7247dc91" kindref="member">shm_buffer_interface</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer,<sp/><ref refid="wayland-shm_8c_1a7231b52c0ce2a7b81ef6de09bdb6b16e" kindref="member">destroy_buffer</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="wayland-shm_8c_1a487ba3577d701baee7f40d651bafc2c8" kindref="member">destroy_pool</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool<sp/>=<sp/><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(resource);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" kindref="member">shm_pool_unref</ref>(pool,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="wayland-shm_8c_1a1207e2fdb17d9ab776c4e80e90ad39be" kindref="member">shm_pool_destroy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a4fd83132742252516c9a3df7f4eaa4d7" kindref="member">wl_resource_destroy</ref>(resource);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="wayland-shm_8c_1a0b9fe6a955018a8ba7e84b383cad1adb" kindref="member">shm_pool_resize</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool<sp/>=<sp/><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(resource);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>pool-&gt;size)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_FD,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shrinking<sp/>pool<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref><sp/>=<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>compositor<sp/>has<sp/>taken<sp/>references<sp/>on<sp/>this<sp/>pool<sp/>it</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>may<sp/>be<sp/>caching<sp/>pointers<sp/>into<sp/>it.<sp/>In<sp/>that<sp/>case<sp/>we</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>defer<sp/>the<sp/>resize<sp/>(which<sp/>may<sp/>move<sp/>the<sp/>entire<sp/>mapping)</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>until<sp/>the<sp/>compositor<sp/>finishes<sp/>dereferencing<sp/>the<sp/>pool.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a702ee5a57c636c9310f2b75d144051d8" kindref="member">shm_pool_finish_resize</ref>(pool);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_pool_interface<sp/><ref refid="wayland-shm_8c_1af442d59e141a3d0d952b73fc7199cdda" kindref="member">shm_pool_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a8eb1534df499c1423af637ddabea675c" kindref="member">shm_pool_create_buffer</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a1207e2fdb17d9ab776c4e80e90ad39be" kindref="member">shm_pool_destroy</ref>,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a0b9fe6a955018a8ba7e84b383cad1adb" kindref="member">shm_pool_resize</ref></highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="wayland-shm_8c_1a8106a92f58c526409a386a5bc913b4e4" kindref="member">shm_create_pool</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>int32_t<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_STRIDE,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>size<sp/>(%d)&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_close;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*pool);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_close;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref><sp/>=<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref><sp/>=<sp/><ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>=<sp/>mmap(NULL,<sp/>size,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROT_READ<sp/>|<sp/>PROT_WRITE,<sp/>MAP_SHARED,<sp/>fd,<sp/>0);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(resource,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_FD,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>mmap<sp/>fd<sp/>%d:<sp/>%m&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_free;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref><sp/>=</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_shm_pool_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pool-&gt;<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>munmap(pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pool);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(pool-&gt;<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="wayland-shm_8c_1af442d59e141a3d0d952b73fc7199cdda" kindref="member">shm_pool_interface</ref>,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool,<sp/><ref refid="wayland-shm_8c_1a487ba3577d701baee7f40d651bafc2c8" kindref="member">destroy_pool</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">err_free:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pool);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">err_close:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_shm_interface<sp/><ref refid="wayland-shm_8c_1a1f9c98808b7e1fd8ce02d7ba079c485d" kindref="member">shm_interface</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a8106a92f58c526409a386a5bc913b4e4" kindref="member">shm_create_pool</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="wayland-shm_8c_1a233891736e7af8c89af406d21aeeb930" kindref="member">bind_shm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>uint32_t<sp/>version,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*<ref refid="structwl__shm__pool_1a828e8a2c88c2e7b37c98df767aed9909" kindref="member">resource</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display<sp/>=<sp/><ref refid="wayland-server-core_8h_1a1a69200af1f06ccbcd218b2328f3c885" kindref="member">wl_client_get_display</ref>(client);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__array" kindref="compound">wl_array</ref><sp/>*additional_formats;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*p;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource<sp/>=<sp/><ref refid="wayland-server-core_8h_1a26b54247cd0b84c9e228e2a2f9227f8c" kindref="member">wl_resource_create</ref>(client,<sp/>&amp;wl_shm_interface,<sp/>1,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!resource)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a12352da895372907cf30449435d8ee5f" kindref="member">wl_client_post_no_memory</ref>(client);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a9ac84b9077dcf2020f2b847189d4ebc0" kindref="member">wl_resource_set_implementation</ref>(resource,<sp/>&amp;<ref refid="wayland-shm_8c_1a1f9c98808b7e1fd8ce02d7ba079c485d" kindref="member">shm_interface</ref>,<sp/><ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_send_format(resource,<sp/>WL_SHM_FORMAT_ARGB8888);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_send_format(resource,<sp/>WL_SHM_FORMAT_XRGB8888);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional_formats<sp/>=<sp/>wl_display_get_additional_shm_formats(display);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwl__array_1ab050f7375dcae916506142763080ed80" kindref="member">wl_array_for_each</ref>(p,<sp/>additional_formats)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_shm_send_format(resource,<sp/>*p);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="wayland-shm_8c_1aef08c24892f8fa98431e0610ee487ef7" kindref="member">wl_display_init_shm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__display" kindref="compound">wl_display</ref><sp/>*display)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wayland-server_8c_1a85f5bc1c041738f5663835c5565ce0b8" kindref="member">wl_global_create</ref>(display,<sp/>&amp;wl_shm_interface,<sp/>1,<sp/>NULL,<sp/><ref refid="wayland-shm_8c_1a233891736e7af8c89af406d21aeeb930" kindref="member">bind_shm</ref>))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="wayland-shm_8c_1a55964fd7a5774ed9f94bfadce6f8a8ce" kindref="member">wl_shm_buffer_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__resource" kindref="compound">wl_resource</ref><sp/>*resource)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wayland-server_8c_1a8849a58c3ba7a528c643591369125844" kindref="member">wl_resource_instance_of</ref>(resource,<sp/>&amp;wl_buffer_interface,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="wayland-shm_8c_1a5d283afb8f0d50a0d8f2db1a7247dc91" kindref="member">shm_buffer_interface</ref>))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wayland-server_8c_1a07f2328aa269ff1968afc4836018204f" kindref="member">wl_resource_get_user_data</ref>(resource);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>int32_t</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><ref refid="wayland-shm_8c_1ad132f92b616451c67aeb6a25cc60f282" kindref="member">wl_shm_buffer_get_stride</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="wayland-server-core_8h_1adeb4b01f2ecca2cbd9002d6d64f16ac4" kindref="member">wl_shm_buffer_get_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref><sp/>!=<sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1a4a26c02a1bd9c19f5f8207d62d10a247" kindref="member">new_size</ref>))</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_log(</highlight><highlight class="stringliteral">&quot;Buffer<sp/>address<sp/>requested<sp/>when<sp/>its<sp/>parent<sp/>pool<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;has<sp/>an<sp/>external<sp/>reference<sp/>and<sp/>a<sp/>deferred<sp/>resize<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pending.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>+<sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a9c942587694f130e247d705ec793d3d7" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>uint32_t</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="wayland-shm_8c_1af27bd34e94cc995f25a08a0beadd8bc9" kindref="member">wl_shm_buffer_get_format</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1ab62701b55dde79ce9beb612d40712570" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>int32_t</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="wayland-shm_8c_1ada7167ed92985de64ff9116b09a07708" kindref="member">wl_shm_buffer_get_width</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/>int32_t</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="wayland-shm_8c_1acd6812b7699de5a1b80eb4bf1c78aa0e" kindref="member">wl_shm_buffer_get_height</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="wayland-server-core_8h_1ae4dc5539543e07f3c9b9b69f0566d53f" kindref="member">wl_shm_buffer_ref_pool</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1ab3b7954e5221998a8052a5dcbadd0b94" kindref="member">internal_refcount</ref><sp/>+</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>-&gt;<ref refid="structwl__shm__pool_1ae644ecae8a4f5c25bdf8b5efe1697561" kindref="member">external_refcount</ref>++;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="structwl__shm__pool_1a2349156a6b7940645a4754e6c1690051" kindref="member">wl_shm_pool_unref</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1ae501b22d22f2924509a2e115be7c9a11" kindref="member">shm_pool_unref</ref>(pool,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><ref refid="wayland-shm_8c_1a4e19e7e2d179139ddb6545300b4770c1" kindref="member">reraise_sigbus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>SIGBUS<sp/>is<sp/>raised<sp/>for<sp/>some<sp/>other<sp/>reason<sp/>than<sp/>accessing</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>pool<sp/>then<sp/>we&apos;ll<sp/>uninstall<sp/>the<sp/>signal<sp/>handler<sp/>so<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reraise<sp/>it.<sp/>This<sp/>would<sp/>presumably<sp/>kill<sp/>the<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigaction(SIGBUS,<sp/>&amp;<ref refid="wayland-shm_8c_1a8932f36cd3828e6ed6ec367ea1281bcc" kindref="member">wl_shm_old_sigbus_action</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">raise</highlight><highlight class="normal">(SIGBUS);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="wayland-shm_8c_1a190aab5b8dc3bf8095feee45f30f88aa" kindref="member">sigbus_handler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum,<sp/>siginfo_t<sp/>*info,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__sigbus__data" kindref="compound">wl_shm_sigbus_data</ref><sp/>*sigbus_data<sp/>=</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_getspecific(<ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigbus_data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a4e19e7e2d179139ddb6545300b4770c1" kindref="member">reraise_sigbus</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1aaa529b50c8bda30bd5229e79e88fe658" kindref="member">current_pool</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>offending<sp/>address<sp/>is<sp/>outside<sp/>the<sp/>mapped<sp/>space<sp/>for</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>pool<sp/>then<sp/>the<sp/>error<sp/>is<sp/>a<sp/>real<sp/>problem<sp/>so<sp/>we&apos;ll<sp/>reraise</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>info-&gt;si_addr<sp/>&lt;<sp/>pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>||</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>info-&gt;si_addr<sp/>&gt;=<sp/>pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref><sp/>+<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a4e19e7e2d179139ddb6545300b4770c1" kindref="member">reraise_sigbus</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a963de4dc248750a802d7a97258ce2a25" kindref="member">fallback_mapping_used</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>should<sp/>replace<sp/>the<sp/>previous<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmap(pool-&gt;<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>,<sp/>pool-&gt;<ref refid="structwl__shm__pool_1af4de46c4ae845b291c7cc6aa212dcda8" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROT_READ<sp/>|<sp/>PROT_WRITE,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP_PRIVATE<sp/>|<sp/>MAP_FIXED<sp/>|<sp/>MAP_ANONYMOUS,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0)<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-shm_8c_1a4e19e7e2d179139ddb6545300b4770c1" kindref="member">reraise_sigbus</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="wayland-shm_8c_1aa19bb87954d9ecde011a7d82f414fc7d" kindref="member">destroy_sigbus_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__sigbus__data" kindref="compound">wl_shm_sigbus_data</ref><sp/>*sigbus_data<sp/>=<sp/><ref refid="structwl__shm__pool_1a468e7aecda850725f087053b52db6d66" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(sigbus_data);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="wayland-shm_8c_1a34c4446bdaf2452ef114613a06427766" kindref="member">init_sigbus_data_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>new_action<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sa_sigaction<sp/>=<sp/><ref refid="wayland-shm_8c_1a190aab5b8dc3bf8095feee45f30f88aa" kindref="member">sigbus_handler</ref>,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sa_flags<sp/>=<sp/>SA_SIGINFO<sp/>|<sp/>SA_NODEFER</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigemptyset(&amp;new_action.sa_mask);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigaction(SIGBUS,<sp/>&amp;new_action,<sp/>&amp;<ref refid="wayland-shm_8c_1a8932f36cd3828e6ed6ec367ea1281bcc" kindref="member">wl_shm_old_sigbus_action</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_key_create(&amp;<ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>,<sp/><ref refid="wayland-shm_8c_1aa19bb87954d9ecde011a7d82f414fc7d" kindref="member">destroy_sigbus_data</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="wayland-server-core_8h_1a809cb5d6b33338c62bbca6daa4138667" kindref="member">wl_shm_buffer_begin_access</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__pool" kindref="compound">wl_shm_pool</ref><sp/>*pool<sp/>=<sp/>buffer-&gt;<ref refid="structwl__shm__buffer_1a16f66addfe9b94906e8a0bf21653b81b" kindref="member">pool</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__sigbus__data" kindref="compound">wl_shm_sigbus_data</ref><sp/>*sigbus_data;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_once(&amp;<ref refid="wayland-shm_8c_1a8deee1da0bc514eda625a166ee33c706" kindref="member">wl_shm_sigbus_once</ref>,<sp/><ref refid="wayland-shm_8c_1a34c4446bdaf2452ef114613a06427766" kindref="member">init_sigbus_data_key</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data<sp/>=<sp/>pthread_getspecific(<ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigbus_data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data<sp/>=<sp/>zalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*sigbus_data);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigbus_data<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_setspecific(<ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>,<sp/>sigbus_data);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1aaa529b50c8bda30bd5229e79e88fe658" kindref="member">current_pool</ref><sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1aaa529b50c8bda30bd5229e79e88fe658" kindref="member">current_pool</ref><sp/>==<sp/>pool);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1aaa529b50c8bda30bd5229e79e88fe658" kindref="member">current_pool</ref><sp/>=<sp/>pool;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a01a1e17825e65cdf587ebdb698acf23d" kindref="member">access_count</ref>++;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><ref refid="wayland-server-core_8h_1a030db6056ef08836e9dee21a8087e2c1" kindref="member">wl_shm_buffer_end_access</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__sigbus__data" kindref="compound">wl_shm_sigbus_data</ref><sp/>*sigbus_data<sp/>=</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_getspecific(<ref refid="wayland-shm_8c_1ac1f9ccc89e8ded32f25a18eac0caa838" kindref="member">wl_shm_sigbus_data_key</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sigbus_data<sp/>&amp;&amp;<sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a01a1e17825e65cdf587ebdb698acf23d" kindref="member">access_count</ref><sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a01a1e17825e65cdf587ebdb698acf23d" kindref="member">access_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a963de4dc248750a802d7a97258ce2a25" kindref="member">fallback_mapping_used</ref>)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wayland-server_8c_1a75428b89fa7e6aa97027bb74b348c386" kindref="member">wl_resource_post_error</ref>(buffer-&gt;<ref refid="structwl__shm__buffer_1a3d12a4cd03248384cc49f1967344f046" kindref="member">resource</ref>,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WL_SHM_ERROR_INVALID_FD,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;error<sp/>accessing<sp/>SHM<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1a963de4dc248750a802d7a97258ce2a25" kindref="member">fallback_mapping_used</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigbus_data-&gt;<ref refid="structwl__shm__sigbus__data_1aaa529b50c8bda30bd5229e79e88fe658" kindref="member">current_pool</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>functions<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><ref refid="wayland-util_8h_1a3b28bd92b6af30b28f13c09e45269d5b" kindref="member">WL_EXPORT</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwl__shm__buffer" kindref="compound">wl_shm_buffer</ref><sp/>*</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="wayland-server-core_8h_1a2c1c1d3e116c9491e1e66525e74a85bb" kindref="member">wl_shm_buffer_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwl__client" kindref="compound">wl_client</ref><sp/>*client,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1a492d59af93895995ccfe29b760a0b811" kindref="member">width</ref>,<sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1a4c79094063656728405934894c49a90d" kindref="member">height</ref>,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structwl__shm__buffer_1adccfaf9f4b79f1e3539499ce67c74222" kindref="member">stride</ref>,<sp/>uint32_t<sp/><ref refid="structwl__shm__buffer_1ab62701b55dde79ce9beb612d40712570" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="comment">/*<sp/>Functions<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>file<sp/>are<sp/>deprecated.<sp/><sp/>Instead<sp/>of<sp/>adding<sp/>new</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/>code<sp/>here,<sp/>add<sp/>it<sp/>before<sp/>the<sp/>comment<sp/>above<sp/>that<sp/>states:</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/>Deprecated<sp/>functions<sp/>below.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/dev/shm/libwayland/wayland/src/wayland-shm.c"/>
  </compounddef>
</doxygen>
